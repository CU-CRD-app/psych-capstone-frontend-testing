{"version":3,"sources":["src/app/auth/login/login.page.html","src/app/auth/terms-conditions/terms-conditions.component.html","src/app/auth/login/login-routing.module.ts","src/app/auth/login/login.module.ts","src/app/auth/login/login.page.scss","src/app/auth/login/login.page.ts","src/app/auth/terms-conditions/terms-conditions.component.scss","src/app/auth/terms-conditions/terms-conditions.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content id=\\\"login-view\\\">\\n\\n  <div *ngIf=\\\"popup == Popup.HOME\\\" id=\\\"row-with-default-card\\\">\\n    <ion-button (click)=Login() fill=\\\"clear\\\" style=\\\"height: 6%; width: 60%;color: rgb(206,183,124);\\\">Login</ion-button>\\n    <ion-button (click)=Register() fill=\\\"clear\\\" style=\\\"height: 6%; width: 60%; color: rgb(206,183,124)\\\">Register</ion-button>\\n  </div>\\n\\n  <div *ngIf=\\\"popup == Popup.LOGIN\\\" style=\\\"height: 100%; display: flex; flex-direction: column; justify-content: center; align-items: center; background-color: rgb(34,31,32)\\\">\\n    <form [formGroup]=\\\"loginForm\\\" style=\\\"width: 100%\\\">\\n      <ion-item lines=\\\"none\\\"><!-- [ngClass]=\\\"{'valid': fieldNotEmpty(loginForm.value.username) && !loginForm.controls.username.errors && validEmail(loginForm.value.username), 'invalid': fieldNotEmpty(loginForm.value.username) && (loginForm.controls.username.errors || !validEmail(loginForm.value.username))}\\\"-->\\n        <ion-input formControlName=\\\"username\\\" placeholder=\\\"Email\\\" type=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <br>\\n      <ion-item lines=\\\"none\\\"><!--[ngClass]=\\\"{'valid': fieldNotEmpty(loginForm.value.password) && !loginForm.controls.password.errors && validPassword(loginForm.value.password), 'invalid': fieldNotEmpty(loginForm.value.password) && (loginForm.controls.password.errors || !validPassword(loginForm.value.password))}\\\"-->\\n        <ion-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\"></ion-input>\\n      </ion-item>\\n    </form>\\n    <br><br><br>\\n    <div style=\\\"display: flex; justify-content: space-evenly; width: 100%\\\">\\n      <ion-button (click)=\\\"BackHome()\\\" fill=\\\"clear\\\" style=\\\"width: 45%; color: rgb(206,183,124)\\\" [disabled]=\\\"awaitLoginHTTP\\\">Back</ion-button>\\n      <ion-button (click)=\\\"SubmitLogin()\\\" fill=\\\"clear\\\" style=\\\"width: 45%; height: 2rem;color: rgb(206,183,124)\\\" [disabled]=\\\"awaitLoginHTTP\\\">\\n        <span *ngIf=\\\"!awaitLoginHTTP\\\">Login</span>\\n        <ion-spinner *ngIf=\\\"awaitLoginHTTP\\\" slot=\\\"end\\\" name=\\\"dots\\\" style=\\\"size: 50%\\\"></ion-spinner>\\n      </ion-button>\\n    </div>\\n    <div style=\\\"display: flex; justify-content: space-evenly; width: 100%\\\">\\n      <ion-button (click)=\\\"ForgetPassword()\\\" fill=\\\"clear\\\" style=\\\"width: 65%; height: 2rem; color: dodgerblue\\\" [disabled]=\\\"awaitLoginHTTP\\\">Forgot Password?</ion-button>\\n    </div>\\n  </div>\\t\\n\\n  <div *ngIf=\\\"popup == Popup.REGISTER\\\" style=\\\"height: 100%; background-color: rgb(34,31,32)\\\">\\n    <form [formGroup]=\\\"registerForm\\\" style=\\\"height: 100%; width: 100%; display: flex; flex-direction: column; justify-content: space-evenly\\\">\\n      <div>\\n        <!--USERNAME-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.username) && !registerForm.controls.username.errors && validEmail(registerForm.value.username), 'invalid': fieldNotEmpty(registerForm.value.username) && (registerForm.controls.username.errors || !validEmail(registerForm.value.username))}\\\">\\n          <ion-input formControlName=\\\"username\\\" placeholder=\\\"Email\\\" type=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"fieldNotEmpty(registerForm.value.username) && (registerForm.controls.username.errors || !validEmail(registerForm.value.username))\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">Must be valid email</div>\\n        <!--PASSWORD-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.password) && !registerForm.controls.password.errors && validPassword(registerForm.value.password), 'invalid': fieldNotEmpty(registerForm.value.password) && (registerForm.controls.password.errors || !validPassword(registerForm.value.password))}\\\">\\n          <ion-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"fieldNotEmpty(registerForm.value.password) && (registerForm.controls.password.errors || !validPassword(registerForm.value.password))\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">Must contain 1 uppercase letter, 1 lowercase letter, 1 number, no spaces, and be 7-16 characters</div>\\n        <!--CONFIRM PASSWORD-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.password_check) && !registerForm.controls.password_check.errors && registerForm.value.password_check == registerForm.value.password, 'invalid': (fieldNotEmpty(registerForm.value.password) || fieldNotEmpty(registerForm.value.password_check)) && (registerForm.controls.password_check.errors || registerForm.value.password_check != registerForm.value.password)}\\\">\\n          <ion-input formControlName=\\\"password_check\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"(fieldNotEmpty(registerForm.value.password) || fieldNotEmpty(registerForm.value.password_check)) && (registerForm.controls.password_check.errors || registerForm.value.password_check != registerForm.value.password)\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">Must match previous entry</div>\\n      </div>\\n      <div>\\n        <!--AGE-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.age) && !registerForm.controls.age.errors, 'invalid': fieldNotEmpty(registerForm.value.age) && registerForm.controls.age.errors}\\\">\\n          <ion-input formControlName=\\\"age\\\" type=\\\"number\\\" placeholder=\\\"Age\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"fieldNotEmpty(registerForm.value.age) && registerForm.controls.age.errors\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">You must be 18 years or older to participate</div>\\n        <!--RACE-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.race) && !registerForm.controls.race.errors, 'invalid': fieldNotEmpty(registerForm.value.race) && registerForm.controls.race.errors}\\\">\\n          <ion-label>Ethnicity</ion-label>\\n          <ion-select placeholder=\\\"Ethnicity\\\" formControlName=\\\"race\\\">\\n            <ion-select-option *ngFor=\\\"let race of raceList\\\" value={{race}}>{{race}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <!--NATIONALITY-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.nationality) && !registerForm.controls.nationality.errors, 'invalid': fieldNotEmpty(registerForm.value.nationality) && registerForm.controls.nationality.errors}\\\">\\n          <ion-label>Nationality</ion-label>\\n          <ion-select placeholder=\\\"Nationality\\\" formControlName=\\\"nationality\\\">\\n            <ion-select-option *ngFor=\\\"let nation of nationList\\\" value={{nation}}>{{nation}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <!--GENDER-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.gender) && !registerForm.controls.gender.errors, 'invalid': fieldNotEmpty(registerForm.value.gender) && registerForm.controls.gender.errors}\\\">\\n          <ion-label>Gender</ion-label>\\n          <ion-select placeholder=\\\"Gender\\\" formControlName=\\\"gender\\\">\\n            <ion-select-option *ngFor=\\\"let gender of genderList\\\" value={{gender}}>{{gender}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n      </div>\\n      <ion-item button lines=\\\"none\\\" style=\\\"display: flex; justify-content: space-evenly\\\" [ngClass]=\\\"{'valid': registerForm.value.agree == true, 'invalid': registerForm.value.agree == false && termsOpened}\\\" (click)=\\\"openTermsAndConditions()\\\">\\n        <ion-label>Terms and conditions</ion-label>\\n      </ion-item>\\n      <div style=\\\"display: flex; justify-content: space-evenly; width: 100%\\\">\\n        <ion-button (click)=\\\"BackHome()\\\" fill=\\\"clear\\\" style=\\\"width: 45%; height: 2rem; color: rgb(206,183,124)\\\" [disabled]=\\\"awaitLoginHTTP\\\">Back</ion-button>\\n        <ion-button (click)=\\\"SubmitRegister()\\\" fill=\\\"clear\\\" style=\\\"width: 45%; height: 2rem ;color:rgb(206,183,124);\\\" [disabled]=\\\"awaitLoginHTTP\\\">\\n          <span *ngIf=\\\"!awaitRegisterHTTP\\\">Register</span>\\n          <ion-spinner *ngIf=\\\"awaitRegisterHTTP\\\" slot=\\\"end\\\" name=\\\"dots\\\" style=\\\"size: 50%\\\"></ion-spinner>\\n        </ion-button>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div *ngIf=\\\"popup == Popup.FORGOT\\\" style=\\\"height: 100%; background-color: rgb(#221F20)\\\">\\n    <form [formGroup]=\\\"registerForm\\\" style=\\\"height: 100%; width: 100%; display: flex; flex-direction: column; justify-content: space-evenly\\\">\\n      <div>\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.username) && !registerForm.controls.username.errors && validEmail(registerForm.value.username), 'invalid': fieldNotEmpty(registerForm.value.username) && (registerForm.controls.username.errors || !validEmail(registerForm.value.username))}\\\">\\n          <ion-input formControlName=\\\"username\\\" placeholder=\\\"Email\\\" type=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <!-- <div *ngIf=\\\"fieldNotEmpty(registerForm.value.username) && (registerForm.controls.username.errors || !validEmail(registerForm.value.username))\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">Must be valid password</div> -->\\n        <!--PASSWORD-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.password) && !registerForm.controls.password.errors && validPassword(registerForm.value.password), 'invalid': fieldNotEmpty(registerForm.value.password) && (registerForm.controls.password.errors || !validPassword(registerForm.value.password))}\\\">\\n          <ion-input formControlName=\\\"password\\\" placeholder=\\\"New Password\\\" type=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"fieldNotEmpty(registerForm.value.password) && (registerForm.controls.password.errors || !validPassword(registerForm.value.password))\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">Must contain 1 uppercase letter, 1 lowercase letter, 1 number, no spaces, and be 7-16 characters</div>\\n        <!--CONFIRM PASSWORD-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.password_check) && !registerForm.controls.password_check.errors && registerForm.value.password_check == registerForm.value.password, 'invalid': (fieldNotEmpty(registerForm.value.password) || fieldNotEmpty(registerForm.value.password_check)) && (registerForm.controls.password_check.errors || registerForm.value.password_check != registerForm.value.password)}\\\">\\n          <ion-input formControlName=\\\"password_check\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"(fieldNotEmpty(registerForm.value.password) || fieldNotEmpty(registerForm.value.password_check)) && (registerForm.controls.password_check.errors || registerForm.value.password_check != registerForm.value.password)\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">Must match previous entry</div>\\n      </div>\\n      <div>\\n        <!--AGE-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.age) && !registerForm.controls.age.errors, 'invalid': fieldNotEmpty(registerForm.value.age) && registerForm.controls.age.errors}\\\">\\n          <ion-input formControlName=\\\"age\\\" type=\\\"number\\\" placeholder=\\\"Age\\\"></ion-input>\\n        </ion-item>\\n        <div *ngIf=\\\"fieldNotEmpty(registerForm.value.age) && registerForm.controls.age.errors\\\" style=\\\"color: red; margin-left: 3%; font-size: 4vw\\\">You must be 18 years or older to participate</div>\\n        <!--RACE-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.race) && !registerForm.controls.race.errors, 'invalid': fieldNotEmpty(registerForm.value.race) && registerForm.controls.race.errors}\\\">\\n          <ion-label>Ethnicity</ion-label>\\n          <ion-select placeholder=\\\"Ethnicity\\\" formControlName=\\\"race\\\">\\n            <ion-select-option *ngFor=\\\"let race of raceList\\\" value={{race}}>{{race}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <!--NATIONALITY-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.nationality) && !registerForm.controls.nationality.errors, 'invalid': fieldNotEmpty(registerForm.value.nationality) && registerForm.controls.nationality.errors}\\\">\\n          <ion-label>Nationality</ion-label>\\n          <ion-select placeholder=\\\"Nationality\\\" formControlName=\\\"nationality\\\">\\n            <ion-select-option *ngFor=\\\"let nation of nationList\\\" value={{nation}}>{{nation}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <!--GENDER-->\\n        <ion-item lines=\\\"none\\\" [ngClass]=\\\"{'valid': fieldNotEmpty(registerForm.value.gender) && !registerForm.controls.gender.errors, 'invalid': fieldNotEmpty(registerForm.value.gender) && registerForm.controls.gender.errors}\\\">\\n          <ion-label>Gender</ion-label>\\n          <ion-select placeholder=\\\"Gender\\\" formControlName=\\\"gender\\\">\\n            <ion-select-option *ngFor=\\\"let gender of genderList\\\" value={{gender}}>{{gender}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n      </div>\\n      <div style=\\\"display: flex; justify-content: space-evenly; width: 100%\\\">\\n        <ion-button (click)=\\\"BackHome()\\\" fill=\\\"clear\\\" style=\\\"width: 45%; height: 2rem; color: dodgerblue\\\" [disabled]=\\\"awaitLoginHTTP\\\">Back</ion-button>\\n        <ion-button (click)=\\\"SubmitRegister()\\\" style=\\\"width: 45%; height: 2rem\\\" [disabled]=\\\"awaitLoginHTTP\\\">\\n          <span *ngIf=\\\"!awaitRegisterHTTPTwo\\\">Register</span>\\n          <ion-spinner *ngIf=\\\"awaitRegisterHTTPTwo\\\" slot=\\\"end\\\" name=\\\"dots\\\" style=\\\"size: 50%\\\"></ion-spinner>\\n        </ion-button>\\n      </div>\\n    </form>\\n  </div>\\n  \\n</ion-content>\\n\"","export default \"<ion-content>\\n  \\n  <div style=\\\"display: flex; flex-direction: column; justify-content: center; height: 100%\\\">\\n\\n    <h2 style=\\\"text-align: center\\\">Terms and Conditions</h2>\\n\\n    <div>\\n      <div style=\\\"margin: 5%\\\">\\n        This app is a research project approved by the Institutional Review Board at the University of Colorado Boulder.\\n      </div>\\n\\n      <div style=\\\"margin: 5%\\\">\\n        The app is designed to build your personal expertise with faces of other races. The goal of this research is to understand how, when and for whom this training is effective.\\n      </div>\\n\\n      <div style=\\\"margin: 5%\\\">\\n        To participate, all participants must read and provide consent.\\n      </div>\\n\\n      <div style=\\\"margin: 5%\\\">\\n        Please read and download the consent form <a style=\\\"color: rgb(206,183,124); text-decoration: none\\\" href=\\\"http://psych.colorado.edu/~jclab/app_consent\\\"><b>here</b></a>.\\n      </div>\\n\\n      <div style=\\\"margin: 5%\\\">\\n        By clicking “I consent,” you indicate that your are at least 18 years of age and that you consent to participate in this research.\\n      </div>\\n    </div>\\n\\n    <br>\\n\\n    <div>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>I consent</ion-label>\\n        <ion-checkbox slot=\\\"start\\\" (click)=\\\"closeModal(true)\\\" [checked]=\\\"consent == true\\\"></ion-checkbox>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>I do not consent</ion-label>\\n        <ion-checkbox slot=\\\"start\\\" (click)=\\\"closeModal(false)\\\" [checked]=\\\"consent == false\\\"></ion-checkbox>\\n      </ion-item>\\n    </div>\\n\\n  </div>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage, TermsConditionsComponent],\n  entryComponents: [TermsConditionsComponent]\n})\nexport class LoginPageModule {}\n","export default \"#login-view {\\n  --height: 100vh;\\n  --width: auto;\\n  --background: rgb(34,31,32) url('splash.png') no-repeat center center / contain;\\n  background-repeat: no-repeat;\\n}\\n\\n#row-with-default-card {\\n  height: 96%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-end;\\n  align-items: center;\\n}\\n\\nion-item {\\n  margin: 5px;\\n  margin: 5px;\\n  border-radius: 5px;\\n}\\n\\n.invalid {\\n  --background: rgb(255, 209, 209) ;\\n}\\n\\n.valid {\\n  --background: rgb(207, 253, 217) ;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL2F1dGgvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGVBQUE7RUFDQSxhQUFBO0VBQ0EsK0VBQUE7RUFDQSw0QkFBQTtBQ0NEOztBREVBO0VBQ0MsV0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7QUNDRDs7QURFQTtFQUNDLFdBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUNDRDs7QURFQTtFQUNDLGlDQUFBO0FDQ0Q7O0FERUE7RUFDQyxpQ0FBQTtBQ0NEIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbG9naW4tdmlldyB7XG5cdC0taGVpZ2h0OiAxMDB2aDtcblx0LS13aWR0aDogYXV0bztcblx0LS1iYWNrZ3JvdW5kOiByZ2IoMzQsMzEsMzIpIHVybChcIi4uLy4uLy4uL2Fzc2V0cy9iYWNrZ3JvdW5kX2ltZ3Mvc3BsYXNoLnBuZ1wiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciAvIGNvbnRhaW47XG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG5cbiNyb3ctd2l0aC1kZWZhdWx0LWNhcmQge1xuXHRoZWlnaHQ6IDk2JTtcblx0ZGlzcGxheTogZmxleDtcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuaW9uLWl0ZW0ge1xuXHRtYXJnaW46IDVweDtcblx0bWFyZ2luOiA1cHg7XG5cdGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmludmFsaWQge1xuXHQtLWJhY2tncm91bmQ6IHJnYigyNTUsIDIwOSwgMjA5KVxufVxuXG4udmFsaWQge1xuXHQtLWJhY2tncm91bmQ6IHJnYigyMDcsIDI1MywgMjE3KVxufSIsIiNsb2dpbi12aWV3IHtcbiAgLS1oZWlnaHQ6IDEwMHZoO1xuICAtLXdpZHRoOiBhdXRvO1xuICAtLWJhY2tncm91bmQ6IHJnYigzNCwzMSwzMikgdXJsKFwiLi4vLi4vLi4vYXNzZXRzL2JhY2tncm91bmRfaW1ncy9zcGxhc2gucG5nXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIC8gY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cblxuI3Jvdy13aXRoLWRlZmF1bHQtY2FyZCB7XG4gIGhlaWdodDogOTYlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5pb24taXRlbSB7XG4gIG1hcmdpbjogNXB4O1xuICBtYXJnaW46IDVweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4uaW52YWxpZCB7XG4gIC0tYmFja2dyb3VuZDogcmdiKDI1NSwgMjA5LCAyMDkpIDtcbn1cblxuLnZhbGlkIHtcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoMjA3LCAyNTMsIDIxNykgO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastController, ModalController } from '@ionic/angular';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { Router } from '@angular/router';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\nimport { environment } from '../../../environments/environment';\n\nenum Popup { HOME, LOGIN, REGISTER, FORGOT }\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public loginForm : FormGroup;\n  public registerForm : FormGroup;\n\n  private debugMode: boolean = true;\n\n  constructor(private router : Router, public formBuilder : FormBuilder, public http : HttpClient, public nativeStorage : NativeStorage, public toastController : ToastController, public modalController : ModalController) {\n\n    this.loginForm = formBuilder.group({\n      username: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required, Validators.minLength(7), Validators.maxLength(16)])]\n    }, {validator: LoginPage.loginFormCheck});\n\n    this.registerForm = formBuilder.group({\n      username: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required, Validators.minLength(7), Validators.maxLength(16)])],\n      password_check: [null, Validators.compose([Validators.required, Validators.minLength(7), Validators.maxLength(16)])],\n      race: [null, Validators.compose([Validators.required])],\n      nationality: [null, Validators.compose([Validators.required])],\n      gender: [null, Validators.compose([Validators.required])],\n      age: [null, Validators.compose([Validators.required, Validators.min(18), Validators.max(100)])],\n      agree: [null, Validators.compose([Validators.required])]\n    }, {validator: LoginPage.registerFormCheck});\n\n  }\n\n  ngOnInit() {\n\n    this.router.navigate(['/dashboard']);\n\n    this.popup = Popup.HOME;\n    this.clickedSubmit = false;\n  }\n\n  Popup = Popup;\n  popup : Popup;\n\n  awaitLoginHTTP : boolean;\n  awaitRegisterHTTP : boolean;\n  awaitRegisterHTTPTwo : true;\n  clickedSubmit : boolean;\n  termsOpened : boolean;\n\n  login : string = \"assets/icon/log-in.svg\";\n  help : string = \"help-circle-outline\";\n\n  base_url : string = environment.backendBaseUrl;\n  login_url : string = this.base_url + \"login/\";\n  register_url : string = this.base_url + \"register/\";\n\n  nationList : string[] = [\"United States of America (USA)\", \"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cabo Verde\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Central African Republic (CAR)\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Democratic Republic of the Congo\", \"Costa Rica\", \"Cote d'Ivoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czechia\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Eswatini\", \"Ethiopia\", \"Fiji\", \"Finland\", \"France\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Greece\", \"Grenada\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Kosovo\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Morocco\", \"Mozambique\", \"Myanmar (Burma)\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Korea\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Qatar\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Korea\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor-Leste\", \"Togo\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates (UAE)\", \"United Kingdom (UK)\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Vatican City\", \"Venezuela\", \"Vietnam\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\n  genderList : string[] = [\"Male\", \"Female\", \"Other\"];\n  raceList : string[] = [\"Caucasian\", \"Black\", \"Hispanic\", \"East Asian\", \"South Asian\", \"Middle Eastern\", \"Pacific Islander\", \"American Indian/Alaska Native\", \"Multi-racial\", \"Other\"]\n\n  Login() {\n    this.popup = Popup.LOGIN;\n    this.resetForms();\n  }\n\n  Register() {\n    this.popup = Popup.REGISTER;\n    this.resetForms();\n  }\n\n  BackHome() {\n    this.popup = Popup.HOME;\n    this.resetForms();\n  }\n\n  ForgetPassword() {\n    this.popup = Popup.FORGOT;\n    this.resetForms();\n  }\n\n  SubmitLogin() {\n\n    if (!this.awaitLoginHTTP) {\n\n      this.clickedSubmit = true;\n\n      if (this.loginForm.invalid) {\n\n        this.dangerToast(\"Invalid email or password\")\n        this.resetForms();\n\n      } else {\n\n        let body = {\n          \"email\": this.loginForm.value.username,\n          \"password\": this.loginForm.value.password\n        }\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          }),\n          responseType: 'text' as 'text'\n        };\n  \n        this.awaitLoginHTTP = true;\n        this.http.post(this.login_url, body, httpOptions).subscribe((response) => {\n\n          /*this.nativeStorage.setItem(\"token\", response[\"token\"])\n            .then(\n              () => console.log(\"token stored\"),\n              error => console.log(\"Error storing token: \", error)\n            );*/\n          localStorage.setItem(\"token\", response);\n          localStorage.setItem(\"username\", this.loginForm.value.username);\n          this.awaitLoginHTTP = false;\n          this.BackHome();\n          this.router.navigate(['/dashboard']);\n        }, (err) => {\n          err[\"error\"] == \"Account not found\" ? this.dangerToast(\"Invalid email or password\") : this.dangerToast(\"Something went wrong. Please try again later\");\n          this.awaitLoginHTTP = false;\n          this.resetForms();\n        });\n      }\n    }\n  }\n\n  SubmitRegister() {\n\n\n    if (!this.awaitRegisterHTTPTwo) {\n\n      this.clickedSubmit = true;\n\n      // if (this.registerForm.invalid) {\n\n      //   this.dangerToast(\"Billy Bob\");\n\n      // } else {\n\n        let body = {\n          \"email\": this.registerForm.value.username,\n          \"password\": this.registerForm.value.password,\n          \"race\": this.registerForm.value.race,\n          \"nationality\": this.registerForm.value.nationality,\n          \"gender\": this.registerForm.value.gender,\n          \"age\": this.registerForm.value.age,\n          \"question\": this.registerForm.value.question,\n          \"agree\": this.registerForm.value.agree\n        }\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n        };\n\n        this.awaitRegisterHTTP = true;\n        this.http.put(this.register_url, body, httpOptions).subscribe((response) => {\n          this.awaitRegisterHTTP = false;\n          this.Login();\n          this.successToast(\"Account creation successful!\");\n        }, (err) => {\n          this.awaitRegisterHTTP = false;\n          this.successToast(\"Account creation failed!\");\n          this.resetForms();\n        });\n\n      // }\n    }\n\n    if (!this.awaitRegisterHTTP) {\n\n      this.clickedSubmit = true;\n\n      if (this.registerForm.invalid) {\n\n        this.dangerToast(\"Invalid fields\");\n\n      } else {\n\n        let body = {\n          \"email\": this.registerForm.value.username,\n          \"password\": this.registerForm.value.password,\n          \"race\": this.registerForm.value.race,\n          \"nationality\": this.registerForm.value.nationality,\n          \"gender\": this.registerForm.value.gender,\n          \"age\": this.registerForm.value.age,\n          \"question\": this.registerForm.value.question,\n          \"agree\": this.registerForm.value.agree\n        }\n        const httpOptions = {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json; charset=utf-8'\n          })\n        };\n\n        this.awaitRegisterHTTP = true;\n        this.http.put(this.register_url, body, httpOptions).subscribe((response) => {\n          this.awaitRegisterHTTP = false;\n          this.Login();\n          this.successToast(\"Account registration successful!\");\n        }, (err) => {\n          this.awaitRegisterHTTP = false;\n          err[\"error\"] == \"Email already used\" ? this.dangerToast(\"Account already exists\") : this.dangerToast(\"Something went wrong. Please try again later\");\n          this.resetForms();\n        });\n\n      }\n    }\n  }\n\n  validEmail(email : string) {\n    return /[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}/.test(email);\n  }\n\n  validPassword(password : string) {\n    return /[a-z]/.test(password) && /[A-Z]/.test(password) && /[0-9]/.test(password) && password.indexOf(' ') < 0 && password != 'Passw0rd' && password != 'Password123';\n  }\n\n  static loginFormCheck(form: FormGroup): any {\n    let email = form.get('username');\n    let password = form.get('password');\n\n    if (!/[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}/.test(email.value)) {\n      return { \"INVALID_EMAIL\" : true };\n    }\n\n    if (!(/[a-z]/.test(password.value) && /[A-Z]/.test(password.value) && /[0-9]/.test(password.value) && password.value.indexOf(' ') < 0 && password.value != 'Passw0rd' && password.value != 'Password123')) {\n      return { \"PASSWORD_INVALID\" : true }\n    }\n\n    return null;\n  }\n\n  static registerFormCheck(form: FormGroup): any {\n    let email = form.get('username');\n    let password = form.get('password');\n    let password_confirm = form.get('password_check');\n    let race = form.value['race'];\n    let nationality = form.value['nationality'];\n    let gender = form.value['gender'];\n    let agreement = form.value['agree'];\n    let question = form.value['question'];\n\n    if (race == '' || nationality == '' || gender == '' || question == '') {\n      return { \"EMPTY_RESPONSES\" : true };\n    }\n\n    if (!/[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}/.test(email.value)) {\n      return { \"INVALID_EMAIL\" : true };\n    }\n    \n    if (password.value != password_confirm.value) {\n      return { \"PASSWORD_MISMATCH\" : true };\n    }\n\n    if (!(/[a-z]/.test(password.value) && /[A-Z]/.test(password.value) && /[0-9]/.test(password.value) && password.value.indexOf(' ') < 0 && password.value != 'Passw0rd' && password.value != 'Password123')) {\n      return { \"PASSWORD_INVALID\" : true };\n    }\n\n    if (!(/[a-z]/.test(password_confirm.value) && /[A-Z]/.test(password_confirm.value) && /[0-9]/.test(password_confirm.value) && password_confirm.value.indexOf(' ') < 0 && password_confirm.value != 'Passw0rd' && password_confirm.value != 'Password123')) {\n      return { \"PASSWORD_CONFIRM_INVALID\" : true };\n    }\n\n    if (!agreement) {\n      return { \"AGREEMENT_FALSE\" : true };\n    }\n\n    return null;\n\n  }\n\n  resetForms() {\n    this.loginForm.reset();\n    this.registerForm.reset();\n    this.clickedSubmit = false;\n    this.termsOpened = false;\n  }\n\n  async dangerToast(toastMessage : string) {\n    const toast = await this.toastController.create({\n      message: toastMessage,\n      color: 'danger',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async successToast(toastMessage : string) {\n    const toast = await this.toastController.create({\n      message: toastMessage,\n      color: 'success',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  fieldNotEmpty(field : string) {\n    return (field != null && field != '') || this.clickedSubmit;\n  }\n\n  async openTermsAndConditions() {\n    let consent = null;\n    if (this.termsOpened) {\n      if (this.registerForm.value.agree) {\n        consent = true;\n      } else {\n        consent = false;\n      }\n    }\n    const modal = await this.modalController.create({\n      component: TermsConditionsComponent,\n      componentProps: {\n        'consent': consent\n      }\n    });\n    await modal.present();\n    let { data } = await modal.onWillDismiss();\n    this.termsOpened = true;\n    if (data == true) {\n      this.registerForm.get('agree').setValue(true);\n    } else {\n      this.registerForm.get('agree').setValue(false);\n    }\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvdGVybXMtY29uZGl0aW9ucy90ZXJtcy1jb25kaXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-terms-conditions',\n  templateUrl: './terms-conditions.component.html',\n  styleUrls: ['./terms-conditions.component.scss'],\n})\n\nexport class TermsConditionsComponent implements OnInit {\n  constructor(private modalController : ModalController, private navParams : NavParams) { }\n\n  ngOnInit() {\n    this.consent = this.navParams.data.consent;\n  }\n  \n  consent : boolean;\n\n  async closeModal(consent : boolean) {\n    await this.modalController.dismiss(consent);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"auth-login-login-module-es5.js"}