{"version":3,"sources":["src/app/forced-choice/forced-choice.component.html","src/app/help-modal/help-modal.component.html","src/app/learning-task/learning-task.component.html","src/app/memory-match/memory-match.component.html","src/app/name-face/name-face.component.html","src/app/race-select-modal/race-select-modal.component.html","src/app/same-different/same-different.component.html","src/app/score-page/score-page.component.html","src/app/shuffle/shuffle.component.html","src/app/training/training.page.html","src/app/whos-new/whos-new.component.html","src/app/forced-choice/forced-choice.component.scss","src/app/forced-choice/forced-choice.component.ts","src/app/help-modal/help-modal.component.scss","src/app/help-modal/help-modal.component.ts","src/app/learning-task/learning-task.component.scss","src/app/learning-task/learning-task.component.ts","src/app/memory-match/memory-match.component.scss","src/app/memory-match/memory-match.component.ts","src/app/name-face/name-face.component.scss","src/app/name-face/name-face.component.ts","src/app/race-select-modal/race-select-modal.component.scss","src/app/race-select-modal/race-select-modal.component.ts","src/app/same-different/same-different.component.scss","src/app/same-different/same-different.component.ts","src/app/score-page/score-page.component.scss","src/app/score-page/score-page.component.ts","src/app/service/submit-scores.service.ts","src/app/shuffle/shuffle.component.scss","src/app/shuffle/shuffle.component.ts","src/app/training/training.module.ts","src/app/training/training.page.scss","src/app/training/training.page.ts","src/app/whos-new/whos-new.component.scss","src/app/whos-new/whos-new.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content [ngClass]=\\\"{'default': !showFeedback(), 'success': showFeedback() && slideInfo[currentSlide].stage == Stage.CORRECT, 'failure': showFeedback() && slideInfo[currentSlide].stage == Stage.INCORRECT}\\\">\\n\\n  <ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n  <span *ngIf=\\\"!scoreCardDisplayed()\\\">\\n    <div class=\\\"score-banner\\\"><b>Score: {{score}}/{{progressPercent * taskLength}}</b></div>\\n    <div class=\\\"score-change\\\">+1</div>\\n  </span>\\n\\n  <div *ngIf=\\\"slideInfo[currentSlide].stage == Stage.START\\\" (click)=\\\"startMemorizeTimer()\\\" class=\\\"overlay\\\" button>\\n    <div class=\\\"overlay-content\\\">\\n      Click anywhere to reveal\\n    </div>\\n  </div>\\n\\n  <ion-slides #slideElement (ionSlideDidChange)=\\\"changeSlide()\\\">\\n\\n    <ion-slide *ngFor=\\\"let slide of slideInfo; let slideIndex = index\\\">\\n  \\n      <!--Memorizing the face-->\\n      <div *ngIf=\\\"firstStage(slideIndex)\\\" class=\\\"flex-slide\\\" style=\\\"align-items: center\\\">\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.START\\\">Memorize the face: {{memorizeTime}}</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.MEMORIZE\\\">Memorize the face: <span class=\\\"time-left\\\">{{timeRemaining}}</span></div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.MASK\\\">Hold the face in your mind...</div>\\n        <ion-card style=\\\"height: 310px; width: 270px; display: flex; justify-content: center; align-items: center; background-color: gainsboro\\\">\\n          <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" style=\\\"height: 270px\\\" [src]=\\\"slideInfo[slideIndex].stage == Stage.MEMORIZE ? slideInfo[slideIndex].correctFace : mask\\\" [ngStyle]=\\\"{'width': slideInfo[slideIndex].stage == Stage.MASK ? '85%' : 'auto'}\\\"/>\\n        </ion-card>\\n        <ion-button style=\\\"visibility: hidden\\\"></ion-button>\\n      </div>\\n\\n      <!--Choosing the face and feedback-->\\n      <div *ngIf=\\\"!firstStage(slideIndex)\\\" class=\\\"flex-slide\\\">\\n\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\">Who did you see?</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.CORRECT\\\">Correct!</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.INCORRECT\\\">Incorrect!</div>\\n\\n        <div>\\n\\n          <div>\\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[0])\\\" [ngClass]=\\\"{'selected-wrong-card': showFeedback() && slideInfo[slideIndex].faces[0] != slideInfo[slideIndex].correctFace && slideInfo[slideIndex].faces[0] == slideInfo[slideIndex].selectedFace, 'disabled-card': showFeedback() && slideInfo[slideIndex].faces[0] != slideInfo[slideIndex].correctFace}\\\">\\n              <img [src]=\\\"slideInfo[slideIndex].faces[0]\\\"/>\\n            </ion-card>\\n  \\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[1])\\\" [ngClass]=\\\"{'selected-wrong-card': showFeedback() && slideInfo[slideIndex].faces[1] != slideInfo[slideIndex].correctFace && slideInfo[slideIndex].faces[1] == slideInfo[slideIndex].selectedFace, 'disabled-card': showFeedback() && slideInfo[slideIndex].faces[1] != slideInfo[slideIndex].correctFace}\\\">\\n              <img [src]=\\\"slideInfo[slideIndex].faces[1]\\\"/>\\n            </ion-card>\\n          </div>\\n  \\n          <div>\\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[2])\\\" [ngClass]=\\\"{'selected-wrong-card': showFeedback() && slideInfo[slideIndex].faces[2] != slideInfo[slideIndex].correctFace && slideInfo[slideIndex].faces[2] == slideInfo[slideIndex].selectedFace, 'disabled-card': showFeedback() && slideInfo[slideIndex].faces[2] != slideInfo[slideIndex].correctFace}\\\">\\n              <img [src]=\\\"slideInfo[slideIndex].faces[2]\\\"/>\\n            </ion-card>\\n  \\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[3])\\\" [ngClass]=\\\"{'selected-wrong-card': showFeedback() && slideInfo[slideIndex].faces[3] != slideInfo[slideIndex].correctFace && slideInfo[slideIndex].faces[3] == slideInfo[slideIndex].selectedFace, 'disabled-card': showFeedback() && slideInfo[slideIndex].faces[3] != slideInfo[slideIndex].correctFace}\\\">\\n              <img [src]=\\\"slideInfo[slideIndex].faces[3]\\\"/>\\n            </ion-card>\\n          </div>\\n\\n        </div>\\n\\n        <ion-item class=\\\"footer\\\" lines=\\\"none\\\">\\n          <ion-label>Swipe to Continue</ion-label>\\n          <ion-icon slot=\\\"end\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\"></ion-icon>    \\n        </ion-item>\\n\\n      </div>\\n\\n    </ion-slide>\\n\\n   <!--Score page-->\\n    <ion-slide>\\n      <app-score-page [score]=\\\"score\\\" [length]=\\\"taskLength\\\" [assessment]=\\\"true\\\" (finished)=\\\"finished.emit([score, 2])\\\"></app-score-page>\\n    </ion-slide>\\n\\n  </ion-slides>\\n\\n</ion-content>\\n\"","export default \"<ion-content style=\\\"--background: rgb(206,183,124); --color: white\\\">\\n\\n  <ion-item lines=\\\"none\\\" style=\\\"font-size: 3vh; margin-top: 5%; text-align: center; --background: rgb(206,183,124); --color: white\\\">\\n    <ion-label>\\n      <b>{{task}}</b>\\n    </ion-label>\\n    <ion-icon *ngIf=\\\"showOverview\\\" (click)=\\\"toggleOverview()\\\" slot=\\\"start\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\" style=\\\"height: 3vh\\\"></ion-icon>\\n    <ion-icon (click)=\\\"toggleOverview()\\\" slot=\\\"end\\\" color=\\\"dark\\\" name=\\\"help-circle\\\" style=\\\"height: 3vh\\\" [ngClass]=\\\"{'hidden': task == 'Start' || task == 'Overview' || hideQuit}\\\"></ion-icon>\\n    <ion-icon *ngIf=\\\"!showOverview\\\" slot=\\\"start\\\" color=\\\"dark\\\" name=\\\"close-circle\\\" style=\\\"margin-right: 10px; height: 3vh\\\" (click)=\\\"closeModal()\\\" [ngClass]=\\\"{'hidden': hideQuit}\\\"></ion-icon>\\n  </ion-item>\\n\\n  <ion-slides #slideElement (ionSlideWillChange)=\\\"changeSlide()\\\" style=\\\"height: 80%\\\">\\n    <ion-slide *ngFor=\\\"let slide of slides; let i = index\\\" style=\\\"height: 100%; width: 100%; display: flex; flex-direction: column; justify-content: space-evenly; padding-left: 5%; padding-right: 5%\\\">\\n      <img [src]=\\\"slide[0]\\\">\\n      <div style=\\\"display: flex; align-items: center; flex-shrink: 2; margin-left: 5%; margin-right: 5%; font-size: 5vw\\\">{{slide[1]}}</div>\\n    </ion-slide>\\n  </ion-slides>\\n\\n  <div style=\\\"text-align: center; font-size: 3vh\\\">\\n    <span *ngFor=\\\"let slide of slides; let i = index\\\" style=\\\"margin: 0 auto\\\">\\n      <ion-icon *ngIf=\\\"currentSlide == i\\\" color=\\\"dark\\\" name=\\\"radio-button-on\\\"></ion-icon>\\n      <ion-icon *ngIf=\\\"currentSlide != i\\\" (click)=\\\"slideElement.slideTo(i)\\\" color=\\\"dark\\\" name=\\\"radio-button-off\\\"></ion-icon>\\n    </span>\\n  </div>\\n\\n</ion-content>\"","export default \"<ion-content id=\\\"learningView\\\">\\n\\t<ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n\\t<div class=\\\"flex-slide\\\">\\n\\t\\t<div style=\\\"font-size: 7vw; color: white; text-align: center; margin-top: 5%\\\">Memorize the faces and names</div>\\n\\n\\t\\t<ion-slides #slideElement (ionSlideNextStart)=\\\"changeCard('next')\\\" (ionSlidePrevStart)=\\\"changeCard('back')\\\" style=\\\"width: 100%;\\\">\\n\\t\\t\\t<ion-slide *ngFor=\\\"let face of facePaths; let i = index\\\" style=\\\"text-align: center\\\">\\n\\t\\n\\t\\t\\t\\t<ion-card style=\\\"display: flex; justify-content: center; align-items: center;\\\">\\n\\t\\t\\t\\t\\t<ion-icon (click)=\\\"slideElement.slidePrev()\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\" style=\\\"margin-right: calc((100% - 220px) / 2); font-size: 150%\\\" [ngStyle]=\\\"{'opacity': progress == 0 ? '0.2' : '1'}\\\"></ion-icon>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"imgContainer\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img [src]=\\\"face\\\" id=faceImg>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"nameContainer\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div id=\\\"nameDisplay\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p id=\\\"nameText\\\">{{setNames[i]}}</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<ion-icon (click)=\\\"slideElement.slideNext()\\\" color=\\\"dark\\\" name=\\\"arrow-forward\\\" style=\\\"margin-left: calc((100% - 220px) / 2); font-size: 150%\\\" [ngStyle]=\\\"{'opacity': progress == (facePaths.length - 1) ? '0.2' : '1'}\\\"></ion-icon>\\n\\t\\t\\t\\t</ion-card>\\n\\t\\n\\t\\t\\t</ion-slide>\\n\\t\\t</ion-slides>\\n\\t\\n\\t\\t<div style=\\\"text-align: center; height: 7%; margin-bottom: 5%\\\">\\n\\t\\t\\t<ion-button *ngIf=\\\"!seenAll\\\" color=\\\"success\\\" style=\\\"height: 100%\\\" disabled>Finish</ion-button>\\n\\t\\t\\t<ion-button *ngIf=\\\"seenAll\\\" color=\\\"success\\\" style=\\\"height: 100%\\\" (click)=\\\"finished.emit()\\\">Finish</ion-button>\\n\\t\\t</div>\\n\\t</div>\\n\\n</ion-content>\"","export default \"<ion-content [ngClass]=\\\"{'default': stage != Stage.CORRECT && stage != Stage.INCORRECT, 'success': stage == Stage.CORRECT, 'failure': stage == Stage.INCORRECT}\\\">\\n\\n  <ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n  <span *ngIf=\\\"!scoreCardDisplayed()\\\">\\n    <div class=\\\"score-banner\\\"><b>Score: {{score}}/{{progressPercent * taskLength}}</b></div>\\n    <div class=\\\"score-change\\\" style=\\\"right: 12vw\\\">{{stage == Stage.CORRECT ? '+4' : '-1'}}</div>\\n  </span>\\n\\n  <div *ngIf=\\\"stage == Stage.START\\\" (click)=\\\"startMemorizeTimer()\\\" class=\\\"overlay\\\" button>\\n    <div class=\\\"overlay-content\\\">\\n      Click anywhere to reveal\\n    </div>\\n  </div>\\n\\n  <ion-slides #slideElement (ionSlideDidChange)=\\\"ngAfterViewInit(); resetSelected()\\\" (ionSlideReachStart)=\\\"firstSlide = true\\\" (ionSlideReachEnd)=\\\"firstSlide = false\\\">\\n\\n    <ion-slide class=\\\"flex-slide\\\">\\n\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"stage == Stage.START\\\">Memorize the face placement: {{memorizeTime}}</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"stage == Stage.MEMORIZE\\\">Memorize the face placement: <span class=\\\"time-left\\\">{{timeRemaining}}</span></div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"stage == Stage.MASK\\\">Hold the faces in your mind...</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"stage == Stage.SELECT\\\">Match the faces</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"stage == Stage.CORRECT\\\">Correct!</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"stage == Stage.INCORRECT\\\">Incorrect!</div>\\n      \\n      <div style=\\\"text-align: center;\\\">\\n\\n        <div style=\\\"display: flex; justify-content: center;\\\">\\n          <div *ngFor=\\\"let item of [].constructor(4); let i = index\\\" style=\\\"margin: 10px\\\">\\n            <ion-card [button]=\\\"stage == Stage.SELECT || stage == Stage.CORRECT || stage == Stage.INCORRECT\\\" (click)=\\\"clickFace(i)\\\" [ngClass]=\\\"{'selected-card' : selectedFace == i}\\\">\\n              <img *ngIf=\\\"imageIsDisplayed(i)\\\" [src]=\\\"stage == Stage.MASK ? mask : randomFaces[i]\\\"/>\\n            </ion-card>\\n          </div>\\n        </div>\\n\\n        <div style=\\\"display: flex; justify-content: center;\\\">\\n          <div *ngFor=\\\"let item of [].constructor(4); let i = index\\\" style=\\\"margin: 10px\\\">\\n            <ion-card [button]=\\\"stage == Stage.SELECT || stage == Stage.CORRECT || stage == Stage.INCORRECT\\\" (click)=\\\"clickFace(i + 4)\\\" [ngClass]=\\\"{'selected-card' : selectedFace == i + 4}\\\">\\n              <img *ngIf=\\\"imageIsDisplayed(i + 4)\\\" [src]=\\\"stage == Stage.MASK ? mask : randomFaces[i + 4]\\\"/>\\n            </ion-card>\\n          </div>\\n        </div>\\n\\n        <div style=\\\"display: flex; justify-content: center\\\">\\n          <div *ngFor=\\\"let item of [].constructor(4); let i = index\\\" style=\\\"margin: 10px\\\">\\n            <ion-card [button]=\\\"stage == Stage.SELECT || stage == Stage.CORRECT || stage == Stage.INCORRECT\\\" (click)=\\\"clickFace(i + 8)\\\" [ngClass]=\\\"{'selected-card' : selectedFace == i + 8}\\\">\\n              <img *ngIf=\\\"imageIsDisplayed(i + 8)\\\" [src]=\\\"stage == Stage.MASK ? mask : randomFaces[i + 8]\\\"/>\\n            </ion-card>\\n          </div>\\n        </div>\\n\\n        <div style=\\\"display: flex; justify-content: center\\\">\\n          <div *ngFor=\\\"let item of [].constructor(4); let i = index\\\" style=\\\"margin: 10px\\\">\\n            <ion-card [button]=\\\"stage == Stage.SELECT || stage == Stage.CORRECT || stage == Stage.INCORRECT\\\" (click)=\\\"clickFace(i + 12)\\\" [ngClass]=\\\"{'selected-card' : selectedFace == i + 12}\\\">\\n              <img *ngIf=\\\"imageIsDisplayed(i + 12)\\\" [src]=\\\"stage == Stage.MASK ? mask : randomFaces[i + 12]\\\"/>\\n            </ion-card>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <ion-item class=\\\"footer\\\" lines=\\\"none\\\">\\n        <ion-label>Swipe to Continue</ion-label>\\n        <ion-icon slot=\\\"end\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\"></ion-icon> \\n      </ion-item>\\n\\n    </ion-slide>\\n\\n   <!--Score page-->\\n    <ion-slide>\\n      <app-score-page [score]=\\\"score\\\" [length]=\\\"taskLength\\\" [assessment]=\\\"false\\\" (finished)=\\\"finish($event)\\\"></app-score-page>\\n    </ion-slide>\\n\\n  </ion-slides>\\n\\n</ion-content>\"","export default \"<ion-content [ngClass]=\\\"{'default': !showFeedback(), 'success': showFeedback() && slideInfo[currentSlide].stage == Stage.CORRECT, 'failure': showFeedback() && slideInfo[currentSlide].stage == Stage.INCORRECT}\\\">\\n\\n  <ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n  <span *ngIf=\\\"!scoreCardDisplayed()\\\">\\n    <div class=\\\"score-banner\\\"><b>Score: {{score}}/{{progressPercent * taskLength}}</b></div>\\n    <div class=\\\"score-change\\\">+1</div>\\n  </span>\\n\\n  <ion-slides #slideElement (ionSlideDidChange)=\\\"changeSlide()\\\">\\n\\n    <ion-slide *ngFor=\\\"let slide of slideInfo; let slideIndex = index\\\">\\n\\n      <div class=\\\"flex-slide\\\">\\n\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideIndex != currentSlide || !showFeedback()\\\">Who is <b>{{slideInfo[slideIndex].correctName}}</b>?</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"showFeedback() && slideInfo[slideIndex].stage == Stage.CORRECT\\\">Correct!</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"showFeedback() && slideInfo[slideIndex].stage == Stage.INCORRECT\\\">Incorrect!</div>\\n\\n        <div>\\n\\n          <div style=\\\"display: flex; justify-content: center\\\">\\n\\n            <div *ngFor=\\\"let item of [].constructor(3); let i = index\\\" style=\\\"margin-left: 10px; margin-right: 10px\\\">\\n\\n              <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[i])\\\" [ngClass]=\\\"{'selected-wrong-card': showSelected(i) && slideIndex == currentSlide, 'disabled-card': showDisabled(i) && slideIndex == currentSlide}\\\">\\n                <img *ngIf=\\\"slideIndex <= currentSlide\\\" [src]=\\\"slideInfo[slideIndex].faces[i]\\\"/>\\n              </ion-card>\\n\\n              <div style=\\\"height: 25px; color: white\\\">{{slideIndex == currentSlide ? getName(i) : ''}}</div>\\n\\n            </div>\\n\\n          </div>\\n          <div style=\\\"display: flex; justify-content: center; margin-top: 10px\\\">\\n\\n            <div *ngFor=\\\"let item of [].constructor(3); let i = index\\\" style=\\\"margin-left: 10px; margin-right: 10px\\\">\\n\\n              <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[i + 3])\\\" [ngClass]=\\\"{'selected-wrong-card': showSelected(i + 3) && slideIndex == currentSlide, 'disabled-card': showDisabled(i + 3) && slideIndex == currentSlide}\\\">\\n                <img *ngIf=\\\"slideIndex <= currentSlide\\\" [src]=\\\"slideInfo[slideIndex].faces[i + 3]\\\"/>\\n              </ion-card>\\n\\n              <div style=\\\"height: 25px; color: white\\\">{{slideIndex == currentSlide ? getName(i + 3) : ''}}</div>\\n\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <ion-item class=\\\"footer\\\" lines=\\\"none\\\">\\n          <ion-label>Swipe to Continue</ion-label>\\n          <ion-icon slot=\\\"end\\\" color=\\\"medium\\\" name=\\\"arrow-back\\\" style=\\\"margin-top: 10px\\\"></ion-icon>    \\n        </ion-item>\\n\\n      </div>\\n\\n    </ion-slide>\\n\\n   <!--Score page-->\\n    <ion-slide>\\n      <app-score-page [score]=\\\"score\\\" [length]=\\\"taskLength\\\" [assessment]=\\\"false\\\" (finished)=\\\"finish($event)\\\"></app-score-page>\\n    </ion-slide>\\n\\n  </ion-slides>\\n\\n</ion-content>\"","export default \"<ion-content style=\\\"--background: rgb(34,31,32); --color: white; ion-justify-content-center\\\">\\n\\n  <ion-item lines=\\\"none\\\" style=\\\"font-size: 4vh; margin-top: 40%; text-align: center; --background: rgb(206,183,124); --color: white\\\">\\n    <ion-label >\\n      <b>Select a Facial Set</b>\\n    </ion-label>\\n  </ion-item>\\n  \\n  <ion-list style=\\\"--background: rgb(34,31,32);\\\">\\n    <ion-radio-group>\\n      <ion-item style=\\\"--background: rgb(34,31,32);\\\" *ngFor=\\\"let card of cards; let i = index\\\">\\n        <ion-label style=\\\"color: azure;\\\">{{cards[i]}}</ion-label>\\n        <ion-radio (click)=\\\"selectedRace(cards[i])\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n       <ion-button *ngIf=\\\"!hideStart\\\" color=\\\"success\\\" class=\\\"ion-justify-content-center\\\" [ngClass]=\\\"{'hidden': hideStart}\\\" (click)=\\\"closeModal()\\\">Start</ion-button>\\n    </div>\\n </div>\\n  \\n</ion-content>\"","export default \"<ion-content [ngClass]=\\\"{'default': !showFeedback(), 'success': showFeedback() && slideInfo[currentSlide].stage == Stage.CORRECT, 'failure': showFeedback() && slideInfo[currentSlide].stage == Stage.INCORRECT}\\\">\\n\\n  <ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n  <span *ngIf=\\\"!scoreCardDisplayed()\\\">\\n    <div class=\\\"score-banner\\\"><b>Score: {{score}}/{{progressPercent * taskLength}}</b></div>\\n    <div class=\\\"score-change\\\">+1</div>\\n  </span>\\n\\n  <div *ngIf=\\\"slideInfo[currentSlide].stage == Stage.START\\\" (click)=\\\"startMemorizeTimer()\\\" class=\\\"overlay\\\" button>\\n    <div class=\\\"overlay-content\\\">\\n      Click anywhere to reveal\\n    </div>\\n  </div>\\n\\n  <ion-slides #slideElement (ionSlideDidChange)=\\\"changeSlide()\\\">\\n\\n    <ion-slide *ngFor=\\\"let slide of slideInfo; let slideIndex = index\\\" (swipeleft)=\\\"selectFace(true)\\\" (swiperight)=\\\"selectFace(false)\\\" class=\\\"flex-slide\\\">\\n\\n      <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.START\\\">Memorize the face: {{memorizeTime}}</div>\\n      <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.MEMORIZE\\\">Memorize the face: <span class=\\\"time-left\\\">{{timeRemaining}}</span></div>\\n      <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.MASK\\\">Hold the face in your mind...</div>\\n      <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\">Is this the same person?</div>\\n      <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.CORRECT\\\">Correct!</div>\\n      <div class=\\\"prompt\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.INCORRECT\\\">Incorrect!</div>\\n\\n      <ion-card *ngIf=\\\"slideInfo[slideIndex].stage != Stage.CORRECT && slideInfo[slideIndex].stage != Stage.INCORRECT\\\" class=\\\"swipe-card\\\">\\n        <ion-icon *ngIf=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" (click)=\\\"selectFace(false)\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\" style=\\\"font-size: 150%\\\"></ion-icon>\\n        <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(slideIndex)\\\" style=\\\"height: 270px\\\" [ngStyle]=\\\"{'width': slideInfo[slideIndex].stage == Stage.MASK ? '85%' : 'auto'}\\\"/>\\n        <ion-icon *ngIf=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" (click)=\\\"selectFace(true)\\\" color=\\\"dark\\\" name=\\\"arrow-forward\\\" style=\\\"font-size: 150%\\\"></ion-icon>\\n      </ion-card>\\n\\n      <div *ngIf=\\\"slideInfo[slideIndex].stage != Stage.CORRECT && slideInfo[slideIndex].stage != Stage.INCORRECT\\\" class=\\\"swipe-footer\\\">\\n        <ion-button (click)=\\\"selectFace(true)\\\" color=\\\"primary\\\">Same</ion-button>\\n        <ion-button (click)=\\\"selectFace(false)\\\" color=\\\"secondary\\\">Different</ion-button>\\n      </div>\\n\\n      <div *ngIf=\\\"slideInfo[slideIndex].stage == Stage.CORRECT || slideInfo[slideIndex].stage == Stage.INCORRECT\\\" style=\\\"height: 100%; width: 100%; padding-top: 20%; text-align: center; margin: 0 auto\\\">\\n        <div *ngIf=\\\"slideInfo[slideIndex].correctFace == slideInfo[slideIndex].displayedFace\\\" class=\\\"subheader\\\">Same</div>\\n        <div *ngIf=\\\"slideInfo[slideIndex].correctFace != slideInfo[slideIndex].displayedFace\\\" class=\\\"subheader\\\">Different</div>\\n        <ion-card class=\\\"grid-card\\\" style=\\\"--background: gainsboro;\\\">\\n          <img [src]=\\\"slideInfo[slideIndex].correctFace\\\">\\n        </ion-card>\\n        <ion-card class=\\\"grid-card\\\" style=\\\"--background: gainsboro;\\\">\\n          <img [src]=\\\"slideInfo[slideIndex].displayedFace\\\">\\n        </ion-card>\\n\\n        <ion-item class=\\\"footer\\\" lines=\\\"none\\\" style=\\\"margin-top: 30%\\\">\\n          <ion-label>Swipe to Continue</ion-label>\\n          <ion-icon slot=\\\"end\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\" style=\\\"margin-top: 10px\\\"></ion-icon>    \\n        </ion-item>\\n      </div>\\n\\n    </ion-slide>\\n\\n   <!--Score page-->\\n    <ion-slide>\\n      <app-score-page [score]=\\\"score\\\" [length]=\\\"taskLength\\\" [assessment]=\\\"true\\\" (finished)=\\\"finished.emit([score, 2])\\\"></app-score-page>\\n    </ion-slide>\\n\\n  </ion-slides>\\n\\n</ion-content>\\n\"","export default \"<div class=\\\"flex-slide\\\">\\n  <div>\\n    <div class=\\\"header\\\" style=\\\"color:white\\\">Your score: {{score}}/{{length}}</div>\\n    <div *ngIf=\\\"failed()\\\" class=\\\"subheader\\\" style=\\\"margin: 5%\\\">You need a score of at least {{length * minTrainScore}}/{{length}} ({{minTrainScore * 100}}%) to pass this module</div>\\n    <ion-button *ngIf=\\\"failed()\\\" (click)=\\\"finished.emit(0)\\\">Retry</ion-button>\\n    <ion-button *ngIf=\\\"failed()\\\" (click)=\\\"finished.emit(1)\\\">\\n      <ion-icon [src]=replay_icon></ion-icon>\\n      &nbsp;\\n      <ion-icon [src]=face_icon></ion-icon>\\n    </ion-button>\\n    <br>\\n    <ion-button [color]=\\\"!failed() ? 'success' : 'danger'\\\" (click)=\\\"finished.emit(2)\\\">Finish</ion-button>\\n  </div>\\n</div>\"","export default \"<ion-content [ngClass]=\\\"{'default': !showFeedback(), 'success': showFeedback() && slideInfo[currentSlide].stage == Stage.CORRECT, 'failure': showFeedback() && slideInfo[currentSlide].stage == Stage.INCORRECT}\\\">\\n\\n  <ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n  <span *ngIf=\\\"!scoreCardDisplayed()\\\">\\n    <div class=\\\"score-banner\\\"><b>Score: {{score}}/{{progressPercent * taskLength}}</b></div>\\n    <div class=\\\"score-change\\\" style=\\\"right: 12vw\\\">+{{changeScoreValue}}</div>\\n  </span>\\n\\n  <div *ngIf=\\\"slideInfo[currentSlide].stage == Stage.START\\\" (click)=\\\"startMemorizeTimer()\\\" class=\\\"overlay\\\" button>\\n    <div class=\\\"overlay-content\\\">\\n      Click anywhere to reveal\\n    </div>\\n  </div>\\n\\n  <ion-slides #slideElement (ionSlideDidChange)=\\\"changeSlide()\\\">\\n\\n    <ion-slide *ngFor=\\\"let slide of slideInfo; let slideIndex = index\\\" class=\\\"flex-slide\\\">\\n\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.START\\\">Memorize the face placement: {{memorizeTime}}</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.MEMORIZE\\\">Memorize the face placement: <span class=\\\"time-left\\\">{{timeRemaining}}</span></div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.MASK\\\">Hold the faces in your mind...</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\">Rearrange the faces</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.CORRECT\\\">Correct!</div>\\n      <div class=\\\"prompt-small\\\" *ngIf=\\\"slideInfo[slideIndex].stage == Stage.INCORRECT\\\">Incorrect!</div>\\n\\n      <!--<ion-reorder-group (ionItemReorder)=\\\"$event.detail.complete();\\\" disabled=\\\"false\\\">\\n        <ion-reorder style=\\\"width: 45%; display: inline-block\\\">\\n          <ion-card (click)=\\\"clickCard(0)\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(0) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[0] != slideInfo[slideIndex].correctOrder[0]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(0)\\\"/>\\n          </ion-card>\\n        </ion-reorder>\\n\\n        <ion-reorder style=\\\"width: 45%; display: inline-block\\\">\\n          <ion-card (click)=\\\"clickCard(1)\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(1) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[1] != slideInfo[slideIndex].correctOrder[1]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(1)\\\"/>\\n          </ion-card>\\n        </ion-reorder>\\n\\n        <ion-reorder style=\\\"width: 45%; display: inline-block\\\">\\n          <ion-card (click)=\\\"clickCard(2)\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(2) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[2] != slideInfo[slideIndex].correctOrder[2]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(2)\\\"/>\\n          </ion-card>\\n        </ion-reorder>\\n\\n        <ion-reorder style=\\\"width: 45%; display: inline-block\\\">\\n          <ion-card (click)=\\\"clickCard(3)\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(3) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[3] != slideInfo[slideIndex].correctOrder[3]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(3)\\\"/>\\n          </ion-card>\\n        </ion-reorder>\\n      </ion-reorder-group>-->\\n\\n      <div>\\n\\n        <div>\\n          <ion-card id=\\\"card-0\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" (click)=\\\"clickCard(0)\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(0) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[0] != slideInfo[slideIndex].correctOrder[0]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(0)\\\"/>\\n          </ion-card>\\n\\n          <ion-card id=\\\"card-1\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" (click)=\\\"clickCard(1)\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(1) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[1] != slideInfo[slideIndex].correctOrder[1]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(1)\\\"/>\\n          </ion-card>\\n        </div>\\n\\n        <div>\\n          <ion-card id=\\\"card-2\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" (click)=\\\"clickCard(2)\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(2) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[2] != slideInfo[slideIndex].correctOrder[2]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(2)\\\"/>\\n          </ion-card>\\n\\n          <ion-card id=\\\"card-3\\\" [button]=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" class=\\\"grid-card\\\" (click)=\\\"clickCard(3)\\\" [ngClass]=\\\"{'selected-card': slideInfo[slideIndex].stage != Stage.START && getSrc(3) == slideInfo[slideIndex].selectedFace, 'wrong-card': slideInfo[slideIndex].stage == Stage.INCORRECT && slideInfo[slideIndex].feedback && slideInfo[slideIndex].shuffledOrder[3] != slideInfo[slideIndex].correctOrder[3]}\\\">\\n            <img *ngIf=\\\"slideInfo[slideIndex].stage != Stage.START\\\" [src]=\\\"getSrc(3)\\\"/>\\n          </ion-card>\\n        </div>\\n\\n      </div>\\n\\n      <div style=\\\"text-align: center; height: 10%; width: 100%\\\">\\n        <ion-button *ngIf=\\\"slideInfo[slideIndex].stage == Stage.SELECT\\\" (click)=\\\"clickDone()\\\">Done</ion-button>\\n        <ion-grid *ngIf=\\\"slideInfo[slideIndex].stage == Stage.INCORRECT\\\" style=\\\"--background: transparent; height: 60%\\\" lines=\\\"none\\\">\\n          <ion-row>\\n            <ion-col>\\n              <span style=\\\"color: white\\\">Correct</span>\\n            </ion-col>\\n            <ion-col>\\n              <ion-toggle [(ngModel)]=\\\"slideInfo[slideIndex].feedback\\\" (click)=\\\"animateCardChange()\\\"></ion-toggle>\\n            </ion-col>\\n            <ion-col>\\n              <span style=\\\"color: white\\\">Selected</span>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </div>\\n      <ion-item class=\\\"footer\\\" lines=\\\"none\\\">\\n        <ion-label>Swipe to Continue</ion-label>\\n        <ion-icon slot=\\\"end\\\" color=\\\"dark\\\" name=\\\"arrow-back\\\"></ion-icon>    \\n      </ion-item>\\n\\n    </ion-slide>\\n\\n    <!--Score page-->\\n    <ion-slide>\\n      <app-score-page [score]=\\\"score\\\" [length]=\\\"taskLength\\\" [assessment]=\\\"false\\\" (finished)=\\\"finish($event)\\\"></app-score-page>\\n    </ion-slide>\\n\\n  </ion-slides>\\n\\n</ion-content>\\n\"","export default \"<ion-content style=\\\"--background: rgb(34,31,32); height: 100%\\\">\\n\\n  <ion-header>\\n    <ion-toolbar color = dark [ngClass]=\\\"{'blue-border' : task == null}\\\">\\n      <ion-title>{{getTitle()}}</ion-title>\\n      <ion-buttons *ngIf=\\\"task == null\\\" slot=\\\"start\\\">\\n        <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-icon *ngIf=\\\"task != null && task != Task.FORCED_CHOICE && task != Task.SAME_DIFFERENT && task != Task.PRETEST && task != Task.POSTTEST\\\" slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"arrow-back\\\" style=\\\"margin-left: 1vw; height: 3vh\\\" (click)=\\\"taskExitAlert()\\\"></ion-icon>\\n      <ion-icon *ngIf=\\\"userLevel <= 9\\\" slot=\\\"end\\\" color=\\\"medium\\\" name=\\\"help-circle\\\" style=\\\"margin-right: 1vw; height: 3vh\\\" (click)=\\\"getHelp(false)\\\"></ion-icon>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <div *ngIf=\\\"stage == null\\\" style=\\\"height: 90%; display: flex; justify-content: center; align-items: center\\\">\\n    <ion-spinner name=\\\"crescent\\\" color=\\\"light\\\"></ion-spinner>\\n  </div>\\n\\n  <div *ngIf=\\\"task == null\\\" style=\\\"color: white; text-align: center\\\">\\n\\n    <!--Start Page-->\\n    <div *ngIf=\\\"stage == Stage.START\\\" style=\\\"margin-top: 50%\\\">\\n      <div *ngIf=\\\"userLevel >= 0 && userLevel < 9\\\">\\n        <div class=\\\"header\\\" style=\\\"color:white;margin: 5%\\\"><b>Level {{userLevel}}</b></div>\\n        <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">Are you ready to train?</div>\\n      </div>\\n      <!--\\n      <div *ngIf=\\\"userLevel == 0\\\">\\n        <div class=\\\"header\\\" style = \\\"color:white\\\"><b>Pre-Assessment</b></div>\\n        <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">It looks like you're new, are you ready to begin your pretest?</div>\\n      </div>\\n      -->\\n      <div *ngIf=\\\"userLevel == 9\\\">\\n        <div class=\\\"header\\\" style=\\\"color: white;\\\"><b>Post-Assessment</b></div>\\n        <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">It looks like you've completed all eight levels, are you ready to begin your post-test?</div>\\n      </div>\\n      <!--<h5>What would you like to train today?</h5>-->\\n      <br>\\n      <ion-button color=\\\"success\\\" (click)=\\\"clickStart()\\\">Start</ion-button>\\n      <!--<ion-button color=\\\"success\\\" style=\\\"width: 45%\\\" (click)=\\\"BlackFaces()\\\">Black Faces</ion-button> //; finished_setRaceName()//\\n      <ion-button color=\\\"success\\\" style=\\\"width: 45%\\\" (click)=\\\"AsianFaces()\\\">Asian Faces</ion-button>-->\\n    </div>\\n\\n    <!--Learning tasks-->\\n    <div *ngIf=\\\"stage == Stage.TRAINING\\\" style=\\\"margin-top: 20px\\\">\\n      <div style=\\\"font-size: 6vw\\\">What would you like to do next?</div>\\n      <!--<p style=\\\"font-size: small\\\">{{titleMSG}}</p>-->\\n\\n      <ion-card (click)=\\\"scores[Task.NAME_FACE] == -1 ? renderLevelOneHelp() : null; task = Task.NAME_FACE\\\" button [ngClass]=\\\"{'task-done': scores[Task.NAME_FACE] >= taskLengths[Task.NAME_FACE] * minTrainScore, 'task-failed': scores[Task.NAME_FACE] > -1 && scores[Task.NAME_FACE] < taskLengths[Task.NAME_FACE] * minTrainScore}\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"happy\\\" style=\\\"font-size: 300%\\\"></ion-icon>\\n        <div>Name and Face<span *ngIf=\\\"scores[Task.NAME_FACE] > -1\\\">: {{scores[Task.NAME_FACE]}}/{{taskLengths[Task.NAME_FACE]}}</span></div>\\n      </ion-card>\\n\\n      <ion-card (click)=\\\"scores[Task.WHOS_NEW] == -1 ? renderLevelOneHelp() : null; task = Task.WHOS_NEW\\\" button [ngClass]=\\\"{'task-done': scores[Task.WHOS_NEW] >= taskLengths[Task.WHOS_NEW] * minTrainScore, 'task-failed': scores[Task.WHOS_NEW] > -1 && scores[Task.WHOS_NEW] < taskLengths[Task.WHOS_NEW] * minTrainScore}\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"person-add\\\" style=\\\"font-size: 300%\\\"></ion-icon>\\n        <div>Who's New<span *ngIf=\\\"scores[Task.WHOS_NEW] > -1\\\">: {{scores[Task.WHOS_NEW]}}/{{taskLengths[Task.WHOS_NEW]}}</span></div>\\n      </ion-card>\\n\\n      <ion-card (click)=\\\"scores[Task.MEMORY] == -1 ? renderLevelOneHelp() : null; task = Task.MEMORY\\\" button [ngClass]=\\\"{'task-done': scores[Task.MEMORY] >= taskLengths[Task.MEMORY] * minTrainScore, 'task-failed': scores[Task.MEMORY] > -1 && scores[Task.MEMORY] < taskLengths[Task.MEMORY] * minTrainScore}\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"grid\\\" style=\\\"font-size: 300%\\\"></ion-icon>\\n        <div>Memory Match<span *ngIf=\\\"scores[Task.MEMORY] > -1\\\">: {{scores[Task.MEMORY]}}/{{taskLengths[Task.MEMORY]}}</span></div>\\n      </ion-card>\\n\\n      <ion-card (click)=\\\"scores[Task.SHUFFLE] == -1 ? renderLevelOneHelp() : null; task = Task.SHUFFLE\\\" button [ngClass]=\\\"{'task-done': scores[Task.SHUFFLE] >= taskLengths[Task.SHUFFLE] * minTrainScore, 'task-failed': scores[Task.SHUFFLE] > -1 && scores[Task.SHUFFLE] < taskLengths[Task.SHUFFLE] * minTrainScore}\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"swap\\\" style=\\\"font-size: 300%\\\"></ion-icon>\\n        <div>Shuffle<span *ngIf=\\\"scores[Task.SHUFFLE] > -1\\\">: {{scores[Task.SHUFFLE]}}/{{taskLengths[Task.SHUFFLE]}}</span></div>\\n      </ion-card>\\n\\n      <ion-button (click)=\\\"task = Task.LEARNING\\\" style=\\\"padding: 0; margin: 1%\\\">\\n        <ion-icon [src]=replay_icon></ion-icon>\\n        &nbsp;\\n        <ion-icon [src]=face_icon></ion-icon>\\n      </ion-button>\\n\\n      <ion-button (click)=\\\"startAssessmentAlert()\\\" style=\\\"padding: 0; margin: 1%\\\" [disabled]=\\\"trainingNotDone()\\\">\\n        <ion-icon [src]=assessment_icon ></ion-icon>\\n      </ion-button>\\n\\n    </div>\\n\\n    <!--Assessment tasks-->\\n    <div *ngIf=\\\"stage == Stage.ASSESSMENT\\\" style=\\\"margin-top: 20px\\\">\\n      <div style=\\\"font-size: 6vw\\\">What would you like to do next?</div>\\n\\n      <ion-card (click)=\\\"scores[4] == -1 ? task = Task.FORCED_CHOICE : null; renderLevelOneHelp()\\\" button [ngClass]=\\\"{'task-done': scores[4] != -1}\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"checkmark-circle\\\" style=\\\"font-size: 300%\\\"></ion-icon>\\n        <div>Forced Choice<span *ngIf=\\\"scores[4] > -1\\\">: {{scores[Task.FORCED_CHOICE]}}/{{taskLengths[Task.FORCED_CHOICE]}}</span></div>\\n      </ion-card>\\n\\n      <ion-card (click)=\\\"scores[5] == -1 ? task = Task.SAME_DIFFERENT : null; renderLevelOneHelp()\\\" button [ngClass]=\\\"{'task-done': scores[5] != -1}\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"contacts\\\" style=\\\"font-size: 300%\\\"></ion-icon>\\n        <div>Same Different<span *ngIf=\\\"scores[5] > -1\\\">: {{scores[Task.SAME_DIFFERENT]}}/{{taskLengths[Task.SAME_DIFFERENT]}}</span></div>\\n      </ion-card>\\n\\n    </div>\\n\\n    <!--Done Page-->\\n    <div *ngIf=\\\"stage == Stage.DONE\\\" style=\\\"margin-top: 40%\\\">\\n\\n      <div *ngIf=\\\"userLevel <= 9\\\" style=\\\"display: flex; flex-direction: column; justify-content: center; align-items: center\\\">\\n\\n        <div class=\\\"header\\\" style=\\\"color:white;margin: 5%\\\"><b>Finished!</b></div>\\n        <ion-progress-bar style=\\\"width: 80%\\\" value={{progress}}></ion-progress-bar>\\n        <div style=\\\"color:white;margin-top: 5%; font-size: 4vh\\\">Level <span class=\\\"level\\\">{{userLevel}}</span></div>\\n\\n        <div *ngIf=\\\"userLevel == 1\\\" class=\\\"fade-in\\\">\\n          <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">You've entered level 1! Click to begin your training.</div>\\n          <ion-button color=\\\"success\\\" (click)=\\\"initCurrentLevel()\\\">Train</ion-button>\\n        </div>\\n\\n        <div *ngIf=\\\"userLevel > 0 && userLevel < 9\\\" class=\\\"fade-in\\\">\\n          <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">You've moved on to the next level! Come back tomorrow for your next training.</div>\\n          <ion-button color=\\\"success\\\" routerLink=\\\"/dashboard\\\" routerDirection=\\\"forward\\\">Home</ion-button>\\n        </div>\\n\\n        <div *ngIf=\\\"userLevel == 9\\\" class=\\\"fade-in\\\">\\n          <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">You've completed all eight levels! Now it's time for your post-assessment.</div>\\n          <ion-button color=\\\"success\\\" (click)=\\\"initCurrentLevel()\\\">Post-Assessment</ion-button>\\n        </div>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"userLevel > 9\\\">\\n        <div class=\\\"header\\\" style=\\\"color:white;margin: 5%\\\"><b>You're all done.</b></div>\\n        <div class=\\\"subheader\\\" style=\\\"margin: 5%\\\">Since you've completed all eight levels and the post assessment, you don't have anything else to do! Thank you for your participation in this research.</div>\\n        <ion-button color=\\\"success\\\" routerLink=\\\"/dashboard\\\" routerDirection=\\\"forward\\\">Home</ion-button>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <!--Learning Task-->\\n  <app-learning-task *ngIf=\\\"task == Task.LEARNING\\\" [setNames]=\\\"setNames\\\" [facePaths]=\\\"trainingFacePaths\\\" (finished)=\\\"learningDone = true; iterateStage()\\\"></app-learning-task>\\n  <!--Name and Face-->\\n  <app-name-face *ngIf=\\\"task == Task.NAME_FACE\\\" [setNames]=\\\"setNames\\\" [facePaths]=\\\"trainingFacePaths\\\" (finished)=\\\"finished($event, 0)\\\"></app-name-face>\\n  <!--Who's New?-->\\n  <app-whos-new *ngIf=\\\"task == Task.WHOS_NEW\\\" [facePaths]=\\\"trainingFacePaths\\\" [newFacePaths]=\\\"whosNewFacePaths\\\" (finished)=\\\"finished($event, 1)\\\"></app-whos-new>\\n  <!--Memory Match-->\\n  <app-memory-match *ngIf=\\\"task == Task.MEMORY\\\" [facePaths]=\\\"trainingFacePaths\\\" (finished)=\\\"finished($event, 2)\\\"></app-memory-match>\\n  <!--Shuffle-->\\n  <app-shuffle *ngIf=\\\"task == Task.SHUFFLE\\\" [facePaths]=\\\"trainingFacePaths\\\" (finished)=\\\"finished($event, 3)\\\"></app-shuffle>\\n  <!--Forced Choice-->\\n  <app-forced-choice *ngIf=\\\"task == Task.FORCED_CHOICE\\\" [facePaths]=\\\"assessmentFacePaths\\\" (finished)=\\\"finished($event, 4)\\\"></app-forced-choice>\\n  <!--Same-Different-->\\n  <app-same-different *ngIf=\\\"task == Task.SAME_DIFFERENT\\\" [facePaths]=\\\"assessmentFacePaths\\\" (finished)=\\\"finished($event, 5)\\\"></app-same-different>\\n  <!--Pre-Post-Assessment-->\\n  <app-same-different *ngIf=\\\"task == Task.POSTTEST\\\" [facePaths]=\\\"assessmentFacePaths\\\" (finished)=\\\"finishPrePost($event)\\\"></app-same-different>\\n\\n  <!--For development only\\n  <div>\\n    <br><br><br><br><br><br><br><br><br><br><br><br>\\n    <ion-button (click)=\\\"completeTraining()\\\">Complete Training</ion-button>\\n    <ion-button (click)=\\\"completeAssessment()\\\">Complete Assessment</ion-button>\\n    <ion-button (click)=\\\"completeMost()\\\">Complete Most</ion-button>\\n    <div style=\\\"text-align:center\\\">\\n      <br><br><br><br><br><br><br><br><br><br><br><br>\\n      <ion-button (click)=\\\"task = Task.LEARNING\\\">Learning</ion-button>\\n      <ion-button (click)=\\\"task = Task.NAME_FACE\\\">Name and Face</ion-button>\\n      <ion-button (click)=\\\"task = Task.WHOS_NEW\\\">Who's New</ion-button>\\n      <ion-button (click)=\\\"task = Task.MEMORY\\\">Memory</ion-button>\\n      <ion-button (click)=\\\"task = Task.SHUFFLE\\\">Shuffle</ion-button>\\n      <ion-button (click)=\\\"task = Task.FORCED_CHOICE\\\">Forced Choice</ion-button>\\n      <ion-button (click)=\\\"task = Task.SAME_DIFFERENT\\\">Same Different</ion-button>\\n    </div>\\n  </div>-->\\n\\n</ion-content>\\n\"","export default \"<ion-content [ngClass]=\\\"{'default': !showFeedback(), 'success': showFeedback() && slideInfo[currentSlide].stage == Stage.CORRECT, 'failure': showFeedback() && slideInfo[currentSlide].stage == Stage.INCORRECT}\\\">\\n\\n  <ion-progress-bar style=\\\"margin-top: 0px\\\" value={{progressPercent}}></ion-progress-bar>\\n\\n  <span *ngIf=\\\"!scoreCardDisplayed()\\\">\\n    <div class=\\\"score-banner\\\"><b>Score: {{score}}/{{progressPercent * taskLength}}</b></div>\\n    <div class=\\\"score-change\\\">+1</div>\\n  </span>\\n\\n  <ion-slides #slideElement (ionSlideDidChange)=\\\"changeSlide()\\\">\\n\\n    <ion-slide *ngFor=\\\"let slide of slideInfo; let slideIndex = index\\\">\\n      \\n      <div class=\\\"flex-slide\\\">\\n\\n        <div class=\\\"prompt\\\" *ngIf=\\\"slideIndex != currentSlide || !showFeedback()\\\">Who didn't you see today?</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"showFeedback() && slideInfo[slideIndex].stage == Stage.CORRECT\\\">Correct!</div>\\n        <div class=\\\"prompt\\\" *ngIf=\\\"showFeedback() && slideInfo[slideIndex].stage == Stage.INCORRECT\\\">Incorrect!</div>\\n\\n        <div>\\n\\n          <div>\\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[0])\\\" [ngClass]=\\\"{'selected-wrong-card': showSelected(0) && slideIndex == currentSlide, 'disabled-card': showDisabled(0) && slideIndex == currentSlide}\\\">\\n              <img *ngIf=\\\"slideIndex <= currentSlide\\\" [src]=\\\"slideInfo[slideIndex].faces[0]\\\" />\\n            </ion-card>\\n\\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[1])\\\" [ngClass]=\\\"{'selected-wrong-card': showSelected(1) && slideIndex == currentSlide, 'disabled-card': showDisabled(1) && slideIndex == currentSlide}\\\">\\n              <img *ngIf=\\\"slideIndex <= currentSlide\\\" [src]=\\\"slideInfo[slideIndex].faces[1]\\\" />\\n            </ion-card>\\n          </div>\\n\\n          <div>\\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[2])\\\" [ngClass]=\\\"{'selected-wrong-card': showSelected(2) && slideIndex == currentSlide, 'disabled-card': showDisabled(2) && slideIndex == currentSlide}\\\">\\n              <img *ngIf=\\\"slideIndex <= currentSlide\\\" [src]=\\\"slideInfo[slideIndex].faces[2]\\\" />\\n            </ion-card>\\n\\n            <ion-card [button]=\\\"!showFeedback()\\\" class=\\\"grid-card\\\" (click)=\\\"selectFace(slideInfo[slideIndex].faces[3])\\\" [ngClass]=\\\"{'selected-wrong-card': showSelected(3) && slideIndex == currentSlide, 'disabled-card': showDisabled(3) && slideIndex == currentSlide}\\\">\\n              <img *ngIf=\\\"slideIndex <= currentSlide\\\" [src]=\\\"slideInfo[slideIndex].faces[3]\\\" />\\n            </ion-card>\\n          </div>\\n\\n        </div>\\n\\n        <ion-item class=\\\"footer\\\" lines=\\\"none\\\">\\n          <ion-label>Swipe to Continue</ion-label>\\n          <ion-icon slot=\\\"end\\\" color=\\\"medium\\\" name=\\\"arrow-back\\\"></ion-icon>    \\n        </ion-item>\\n\\n      </div>\\n\\n    </ion-slide>\\n\\n   <!--Score page-->\\n    <ion-slide>\\n      <app-score-page [score]=\\\"score\\\" [length]=\\\"taskLength\\\" [assessment]=\\\"false\\\" (finished)=\\\"finish($event)\\\"></app-score-page>\\n    </ion-slide>\\n\\n  </ion-slides>\\n\\n</ion-content>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmNlZC1jaG9pY2UvZm9yY2VkLWNob2ljZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, EventEmitter, Output, Input, ViewChild } from '@angular/core';\nimport { timer, interval } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createAnimation } from '@ionic/core';\nimport { IonSlides } from '@ionic/angular';\n\nenum Stage { START, MEMORIZE, MASK, SELECT, CORRECT, INCORRECT }\n\n@Component({\n  selector: 'app-forced-choice',\n  templateUrl: './forced-choice.component.html',\n  styleUrls: ['./forced-choice.component.scss'],\n})\nexport class ForcedChoiceComponent implements OnInit {\n  @Input() facePaths : string[];\n  @Output() finished = new EventEmitter<[number, number]>();\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    this.currentSlide = 0;\n    this.progressPercent = 0;\n    this.score = 0;\n    this.fadeIn = createAnimation();\n    this.changeScore = createAnimation();\n    this.taskLength = this.facePaths.length;\n\n    this.slideInfo = [];\n    for (let i = 0; i < this.taskLength; i++) {\n      this.slideInfo.push({\n        correctFace: this.facePaths[i],\n        selectedFace: null,\n        faces: this.getSlideFaces(i),\n        stage: Stage.START\n      });\n    }\n\n    this.timer = timer(500).subscribe(async () => {\n      let fadeInOverlay = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(500)\n        .fromTo('opacity', '0', '.9');\n      await fadeInOverlay.play();\n      if (this.slideInfo[this.currentSlide].stage == Stage.START) {\n        Array.from(document.getElementsByClassName('overlay') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '.9';\n      }\n    });\n\n  }\n\n  ngAfterViewInit() {\n    this.slideElement.lockSwipes(true);\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      this.interval.unsubscribe();\n    }\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n\n  Stage = Stage;\n  numberOfOptions = 4;\n  mask : string = 'assets/background_imgs/mask1.png';\n  memorizeTime : number = 3;\n\n  currentSlide : number;\n  progressPercent : number;\n  score : number;\n  timeRemaining : number;\n  taskLength : number;\n  interval : any;\n  timer : any;\n  slideInfo : any;\n  fadeIn : any;\n  changeScore : any;\n\n  selectFace(face : string) {\n    if (this.slideInfo[this.currentSlide].stage == Stage.SELECT) {\n      this.slideInfo[this.currentSlide].selectedFace = face;\n      if (face == this.slideInfo[this.currentSlide].correctFace) {\n        this.score++;\n        this.slideInfo[this.currentSlide].stage = Stage.CORRECT;\n        this.changeScore = createAnimation()\n          .addElement(document.querySelectorAll('.score-change'))\n          .fill('none')\n          .duration(2000)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 0.05, transform: 'translateY(100%)' },\n            { offset: 0.1, transform: 'translateY(200%)' },\n            { offset: 0.3, transform: 'translateY(200%)' },\n            { offset: 0.5, transform: 'translateY(200%)' },\n            { offset: 0.7, transform: 'translateY(200%)' },\n            { offset: 0.9, transform: 'translateY(200%)' },\n            { offset: 0.95, transform: 'translateY(100%)' },\n            { offset: 1, transform: 'translateY(0%)' }\n          ]);\n        this.changeScore.play();\n      } else {\n        this.slideInfo[this.currentSlide].stage = Stage.INCORRECT;\n      }\n      this.progressPercent = (this.currentSlide + 1)/this.taskLength;\n\n      this.slideElement.lockSwipes(false);\n      this.slideElement.lockSwipeToPrev(true);\n      \n      let slide = this.currentSlide;\n      timer(1000).subscribe(async () => {\n        this.fadeIn = createAnimation()\n          .addElement(document.querySelectorAll('.footer'))\n          .fill('none')\n          .duration(500)\n          .fromTo('opacity', '0', '0.75');\n        if (slide == this.currentSlide) {\n          await this.fadeIn.play();\n          Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>)[this.currentSlide].style.opacity = '.75';  \n        }\n      });\n    }\n  }\n\n  getSlideFaces(index : number) {\n    let faces = [];\n    for (let i = 0; i < this.numberOfOptions - 1; i++) { // Select five faces\n      let j = Math.floor(Math.random() * this.taskLength);\n      while (faces.indexOf(this.facePaths[j]) > -1 || this.facePaths[j] == this.facePaths[index]) { // Account for repeats\n        j = Math.floor(Math.random() * this.taskLength);\n      }\n      faces.push(this.facePaths[j]);\n    }\n    let j = Math.floor(Math.random() * this.numberOfOptions);\n    faces.splice(j, 0, this.facePaths[index]); // Add in current face\n    return faces;\n  }\n\n  async startMemorizeTimer() {\n\n    if (this.currentSlide == 0) {\n      let fadeOutOverlay = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(200)\n        .fromTo('opacity', '.9', '0');\n      await fadeOutOverlay.play();\n    }\n\n    this.timeRemaining = this.memorizeTime;\n    this.slideInfo[this.currentSlide].stage = Stage.MEMORIZE;\n    this.timer = timer(this.timeRemaining * 1000).subscribe(() => {\n      this.startMaskTimer();\n    });\n    this.interval = interval(1000)\n      .pipe(\n        takeUntil(timer(this.timeRemaining * 1000))\n      )\n      .subscribe(async () => {\n        let first = createAnimation()\n          .addElement(document.querySelector('.time-left'))\n          .fill('none')\n          .duration(100)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)', opacity: '1' },\n            { offset: 1, transform: 'translateY(100%)', opacity: '0' }\n          ]);\n        await first.play();\n        this.timeRemaining--;\n        let second = createAnimation()\n          .addElement(document.querySelector('.time-left'))\n          .fill('none')\n          .duration(100)\n          .keyframes([\n            { offset: 0, transform: 'translateY(-100%)', opacity: '0' },\n            { offset: 1, transform: 'translateY(0%)', opacity: '1' }\n          ]);\n        await second.play();\n      });\n  }\n\n  startMaskTimer() {\n    this.slideInfo[this.currentSlide].stage = Stage.MASK;\n    this.timer = timer(2000).subscribe(() => {\n      this.slideInfo[this.currentSlide].stage = Stage.SELECT;\n    });\n  }\n\n  firstStage(index : number) {\n    return this.slideInfo[index].stage == Stage.START || this.slideInfo[index].stage == Stage.MEMORIZE || this.slideInfo[index].stage == Stage.MASK;\n  }\n\n  getSrc(index : number) {\n    if (this.slideInfo[index].stage == Stage.MEMORIZE) {\n      return this.slideInfo[index].correctFace;\n    } else if (this.slideInfo[index].stage == Stage.MASK) {\n      return this.mask;\n    } else {\n      return null;\n    }\n  }\n\n  showFeedback() {\n    return !this.scoreCardDisplayed() && (this.slideInfo[this.currentSlide].stage == Stage.CORRECT || this.slideInfo[this.currentSlide].stage == Stage.INCORRECT);\n  }\n\n  scoreCardDisplayed() {\n    return this.currentSlide >= this.taskLength;\n  }\n\n  async changeSlide() {\n    if (await this.slideElement.getActiveIndex() > this.currentSlide) {\n      this.currentSlide = await this.slideElement.getActiveIndex();\n      await this.slideElement.lockSwipes(true);\n      await this.changeScore.stop();\n      await this.fadeIn.stop();\n      let footers = Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>);\n      for (let i = 0; i < footers.length; i++) {\n        footers[i].style.opacity = '0';\n      }\n\n      if (!this.scoreCardDisplayed()) {\n        this.startMemorizeTimer();\n      }\n    }\n  }\n}","export default \"ion-item {\\n  --background: rgb(206,183,124);\\n}\\n\\ndiv {\\n  color: white;\\n  text-align: center;\\n}\\n\\nimg {\\n  height: 55vh;\\n  width: auto;\\n  margin: 0 auto;\\n  border-radius: 5%;\\n}\\n\\n.hidden {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL2hlbHAtbW9kYWwvaGVscC1tb2RhbC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvaGVscC1tb2RhbC9oZWxwLW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksOEJBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9oZWxwLW1vZGFsL2hlbHAtbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbSB7XG4gICAgLS1iYWNrZ3JvdW5kOiByZ2IoMjA2LDE4MywxMjQpO1xufVxuXG5kaXYge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmltZyB7XG4gICAgaGVpZ2h0OiA1NXZoO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDUlO1xufVxuXG4uaGlkZGVuIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG59IiwiaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IHJnYigyMDYsMTgzLDEyNCk7XG59XG5cbmRpdiB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pbWcge1xuICBoZWlnaHQ6IDU1dmg7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYm9yZGVyLXJhZGl1czogNSU7XG59XG5cbi5oaWRkZW4ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59Il19 */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, NavParams, IonSlides } from '@ionic/angular';\n\nconst slideValues = {\n  'Start': [\n    ['assets/help-slides/start/0.png', 'Welcome to your CRD training. Please take a minute to review these slides and familiarize yourself with the training process.'],\n    ['assets/help-slides/start/1.png', 'There are 8 levels to complete. You should complete one level per day, in about 10-15 minutes.'],\n    ['assets/help-slides/start/2.png', 'In the learning task you will learn the day\\'s names and faces, then you will use those faces to complete the challenges in the four training tasks.'],\n    ['assets/help-slides/start/3.png', 'After passing the training tasks, you will complete two assessment tasks. Your level will increase after you finish.'],\n    ['assets/help-slides/start/4.png', 'Before Level 1 and after Level 8 you will complete an additional assessment to estimate your overall progress.'],\n    ['assets/help-slides/start/5.png', 'If you have questions about how to complete a task or what to do next, you can click the help icon in the upper-right corner.'],\n    ['assets/help-slides/start/6.png', 'Your data will be used to further research of CRD and facial recognition. For more information about the research visit the About Us page.'],\n    ['assets/help-slides/start/7.png', 'Should you need to review this information again, simply click the help icon in the upper right-hand corner of any help page.']\n  ],\n  'Overview': [\n    ['assets/help-slides/start/0.png', 'These slides will provide an overview of the training process.'],\n    ['assets/help-slides/start/1.png', 'There are 8 levels to complete. You should complete one level per day, in about 10-15 minutes.'],\n    ['assets/help-slides/start/2.png', 'In the learning task you will learn the day\\'s names and faces, then you will use those faces to complete the challenges in the four training tasks.'],\n    ['assets/help-slides/start/3.png', 'After passing the training tasks, you will complete two assessment tasks. Your level will increase after you finish.'],\n    ['assets/help-slides/start/4.png', 'Before Level 1 and after Level 8 you will complete an additional assessment to estimate your overall progress.'],\n    ['assets/help-slides/start/5.png', 'If you have questions about how to complete a task or what to do next, you can click the help icon in the upper-right corner.'],\n    ['assets/help-slides/start/6.png', 'Your data will be used to further research of CRD and facial recognition. For more information about the research visit the About Us page.']\n  ],\n  'Meet Today\\'s Faces': [\n    ['assets/help-slides/learning/0.png', 'Memorize the eight name-face pairs you are shown; they will be the basis of your daily training.'],\n    ['assets/help-slides/learning/1.png', 'You can come back to this module at any time after finishing.']\n  ],\n  'Name and Face': [\n    ['assets/help-slides/name-face/0.png', 'For each of the names you\\'ve seen before, you\\'ll be asked to match the appropriate face.'],\n    ['assets/help-slides/name-face/1.png', 'You\\'ll get a point for each face you match correctly.'],\n    ['assets/help-slides/name-face/2.png', 'Whenever you guess incorrectly, you\\'ll be shown the correct answer as well as the two names.']\n  ],\n  'Who\\'s New?': [\n    ['assets/help-slides/whos-new/0.png', 'Select the face that you haven\\'t yet seen today, and that wasn\\'t part of the learning task.'],\n    ['assets/help-slides/whos-new/1.png', 'You\\'ll get a point for each face you guess correctly.'],\n    ['assets/help-slides/whos-new/2.png', 'Whenever you guess incorrectly, you\\'ll be shown the correct answer.']\n  ],\n  'Memory Match': [\n    ['assets/help-slides/memory-match/0.png', 'Click anywhere to show the faces and begin the timer.'],\n    ['assets/help-slides/memory-match/1.png', 'You will have 10 seconds to memorize the placement of as many face pairs as you can.'],\n    ['assets/help-slides/memory-match/2.png', 'After the timer is up, click the cards to match the pairs. When you correctly match a pair, they will be revealed.'],\n    ['assets/help-slides/memory-match/3.png', 'Correct matches award 4 points, while incorrect matches deduct 1 point.']\n  ],\n  'Shuffle': [\n    ['assets/help-slides/shuffle/0.png', 'Click anywhere to show the faces and begin the timer.'],\n    ['assets/help-slides/shuffle/1.png', 'You will have 10 seconds to memorize the placement of the faces.'],\n    ['assets/help-slides/shuffle/2.png', 'After the timer is up, click cards to swap their positions. Click \\'Done\\' when you think the positions are correct.'],\n    ['assets/help-slides/shuffle/3.png', 'For an incorrect solution, incorrect cards will be colored red. You will be awarded a point for each correct card.'],\n    ['assets/help-slides/shuffle/4.png', 'You can toggle between your solution and the correct solution with the toggle at the bottom.']\n  ],\n  'Forced Choice': [\n    ['assets/help-slides/forced-choice/0.png', 'Click anywhere to show the face and begin the timer.'],\n    ['assets/help-slides/forced-choice/1.png', 'You will have 3 seconds to memorize the face.'],\n    ['assets/help-slides/forced-choice/2.png', 'After the timer is up select the face that you saw.'],\n    ['assets/help-slides/forced-choice/3.png', 'You will receive a point for each correct answer.']\n  ],\n  'Same-Different': [\n    ['assets/help-slides/same-different/0.png', 'Click anywhere to show the face and begin the timer.'],\n    ['assets/help-slides/same-different/1.png', 'You will have 3 seconds to memorize the face.'],\n    ['assets/help-slides/same-different/2.png', 'After the timer is up, decide whether the face is the same.'],\n    ['assets/help-slides/same-different/3.png', 'You will receive a point for each correct answer.']\n  ],\n  'Training Tasks': [\n    ['assets/help-slides/training/0.png', 'Welcome to the training tasks. You can check today\\'s face-name pairs however often you need with the bottom left-hand button.'],\n    ['assets/help-slides/training/1.png', 'When you complete a task, you can see your highest score. You must get at least 75% to pass each task, and can do them any number of times.'],\n    ['assets/help-slides/training/2.png', 'After passing every task, you can progress to the daily assessment tasks with the bottom right-hand button. You will not be able to come back today after moving on.']\n  ],\n  'Assessment Tasks': [\n    ['assets/help-slides/assessment/0.png', 'The daily assessment tasks track your learning progress. You cannot redo or restart them.']\n  ],\n  'Finish': [\n    ['assets/help-slides/finish/0.png', 'You are done for the day, come back tomorrow for your next training. You can see your training history on the history page.']\n  ],\n  'Pre-Assessment': [\n    ['assets/help-slides/pre-post/0.png', 'Welcome to your pre-assessment. This is a one-time test; it will provide a baseline for your current CRD.'],\n    ['assets/help-slides/same-different/0.png', 'Click anywhere to show the face and begin the timer.'],\n    ['assets/help-slides/same-different/1.png', 'You will have 3 seconds to memorize the face.'],\n    ['assets/help-slides/same-different/2.png', 'After the timer is up, decide whether the face is the same.'],\n    ['assets/help-slides/pre-post/1.png', 'This test consists of 30 questions, so set aside a few minutes to complete it.'],\n    ['assets/help-slides/finish/0.png', 'When you have finished you can officially begin your training in Level 1.']\n  ],\n  'Post-Assessment': [\n    ['assets/help-slides/pre-post/0.png', 'Welcome to your post-assessment. This is your final test; after this, your participation in this research will be complete.'],\n    ['assets/help-slides/pre-post/1.png', 'This test consists of 30 questions, so set aside a few minutes to complete it.']\n  ]\n}\n\n@Component({\n  selector: 'app-help-modal',\n  templateUrl: './help-modal.component.html',\n  styleUrls: ['./help-modal.component.scss'],\n})\n\nexport class HelpModalComponent implements OnInit {\n  @Input() firstDisplayed : boolean;\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor(private modalController: ModalController, private navParams: NavParams) { }\n\n  ngOnInit() {\n\n    this.task = this.navParams.data.paramTask;\n    this.displayFirst = this.navParams.data.displayFirst;\n    this.slides = slideValues[this.task];\n    this.currentSlide = 0;\n    this.showOverview = false;\n\n    let images : any[] = [];\n    for (let i = 0; i < this.slides.length; i++) {\n      images.push(new Image());\n      images[images.length - 1].src = this.slides[i][0];\n    }\n\n    this.hideQuit = false;\n    // Comment out below, in order to enable quit all the time. \n    // There is a \"sliding\" bug preventing the user to reach the last slide and close it.\n    // if (this.displayFirst && this.slides.length > 1) {\n    //   this.hideQuit = true;\n    // }\n  }\n\n  task : string;\n  slides : string[][];\n  currentSlide : number;\n  showOverview : boolean;\n  displayFirst : boolean;\n  hideQuit : boolean;\n\n  async closeModal() {\n    await this.modalController.dismiss();\n  }\n\n  async changeSlide() {\n    this.currentSlide = await this.slideElement.getActiveIndex();\n    if (this.currentSlide == this.slides.length - 1) {\n      this.hideQuit = false;\n    }\n  }\n\n  toggleOverview() {\n    this.slideElement.slideTo(0);\n    if (this.showOverview) {\n      this.showOverview = false;\n      this.ngOnInit();\n    } else {\n      this.showOverview = true;\n      this.task = 'Overview';\n      this.slides = slideValues[this.task];\n\n      let images : any[] = [];\n      for (let i = 0; i < this.slides.length; i++) {\n        images.push(new Image());\n        images[images.length - 1].src = this.slides[i][0];\n      }\n    }\n  }\n\n}\n","export default \"/* for phone screens */\\n#learningView {\\n  --background: rgb(34,31,32);\\n}\\nion-card {\\n  width: 90%;\\n  height: auto;\\n  text-align: center;\\n  border-radius: 2%;\\n  box-shadow: 6px 4px 5px rgba(0, 0, 0, 0.7);\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-bottom: 5px;\\n  background-color: gainsboro;\\n}\\nion-button {\\n  width: 80%;\\n  height: 100%;\\n  padding: 0;\\n  margin: 5px;\\n}\\nion-icon {\\n  font-size: 100%;\\n}\\n.imgContainer {\\n  height: 230px;\\n  width: auto;\\n  text-align: center !important;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n#faceImg {\\n  margin: 0 auto;\\n  height: 180px;\\n  width: 180px;\\n  display: inline-block;\\n}\\n.nameContainer {\\n  height: 70px;\\n  width: 100%;\\n  margin-bottom: 10px;\\n  background-image: url('nametag.png');\\n  background-position: center;\\n  background-size: auto 100%;\\n  /*width, height*/\\n  background-repeat: no-repeat;\\n}\\n.nameContainer #nameDisplay {\\n  height: 100%;\\n  position: relative;\\n}\\n.nameContainer #nameDisplay #nameText {\\n  color: #ceb77c;\\n  font-weight: bold;\\n  font-size: large;\\n  margin: 5px;\\n  position: absolute;\\n  left: 50%;\\n  transform: translate(-55%, 0);\\n  bottom: 15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL2xlYXJuaW5nLXRhc2svbGVhcm5pbmctdGFzay5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbGVhcm5pbmctdGFzay9sZWFybmluZy10YXNrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBQ0E7RUFDQywyQkFBQTtBQ0NEO0FERUE7RUFDQyxVQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSwwQ0FBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSwyQkFBQTtBQ0NEO0FERUE7RUFDQyxVQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0FDQ0Q7QURFQTtFQUNDLGVBQUE7QUNDRDtBREVBO0VBQ0MsYUFBQTtFQUNBLFdBQUE7RUFDQSw2QkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0FDQ0Q7QURFQTtFQUNDLGNBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0FDQ0Q7QURFQTtFQUNDLFlBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQ0FBQTtFQUNBLDJCQUFBO0VBQ0EsMEJBQUE7RUFBNEIsZ0JBQUE7RUFDNUIsNEJBQUE7QUNFRDtBRERDO0VBQ0MsWUFBQTtFQUNBLGtCQUFBO0FDR0Y7QURGRTtFQUNDLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLDZCQUFBO0VBQ0EsV0FBQTtBQ0lIIiwiZmlsZSI6InNyYy9hcHAvbGVhcm5pbmctdGFzay9sZWFybmluZy10YXNrLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZm9yIHBob25lIHNjcmVlbnMgKi9cbiNsZWFybmluZ1ZpZXcge1xuXHQtLWJhY2tncm91bmQ6IHJnYigzNCwzMSwzMik7XG59XG5cbmlvbi1jYXJkIHtcblx0d2lkdGg6IDkwJTtcblx0aGVpZ2h0OiBhdXRvO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdGJvcmRlci1yYWRpdXM6IDIlO1xuXHRib3gtc2hhZG93OiA2cHggNHB4IDVweCByZ2JhKDAsIDAsIDAsIDAuNyk7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRtYXJnaW4tbGVmdDogYXV0bztcblx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xuXHRtYXJnaW4tYm90dG9tOiA1cHg7XG5cdGJhY2tncm91bmQtY29sb3I6IGdhaW5zYm9ybztcbn1cblxuaW9uLWJ1dHRvbiB7XG5cdHdpZHRoOiA4MCU7XG5cdGhlaWdodDogMTAwJTtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiA1cHg7XG59XG5cbmlvbi1pY29uIHtcblx0Zm9udC1zaXplOiAxMDAlO1xufVxuXG4uaW1nQ29udGFpbmVyIHtcblx0aGVpZ2h0OiAyMzBweDtcblx0d2lkdGg6IGF1dG87XG5cdHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuI2ZhY2VJbWcge1xuXHRtYXJnaW46IDAgYXV0bztcblx0aGVpZ2h0OiAxODBweDsgLy8yMTBweDtcblx0d2lkdGg6IDE4MHB4OyAvLzE2MHB4O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5uYW1lQ29udGFpbmVyIHtcblx0aGVpZ2h0OiA3MHB4O1xuXHR3aWR0aDogMTAwJTtcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcblx0YmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vYXNzZXRzL2JhY2tncm91bmRfaW1ncy9uYW1ldGFnLnBuZ1wiKTtcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuXHRiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMTAwJTsgLyp3aWR0aCwgaGVpZ2h0Ki9cblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0I25hbWVEaXNwbGF5IHtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdCNuYW1lVGV4dCB7XG5cdFx0XHRjb2xvcjogcmdiKDIwNiwxODMsMTI0KTtcblx0XHRcdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRcdFx0Zm9udC1zaXplOiBsYXJnZTtcblx0XHRcdG1hcmdpbjogNXB4O1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0bGVmdDogNTAlO1xuXHRcdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTU1JSwgMCk7XG5cdFx0XHRib3R0b206IDE1JTtcblx0XHR9XG5cdH1cbn1cbiIsIi8qIGZvciBwaG9uZSBzY3JlZW5zICovXG4jbGVhcm5pbmdWaWV3IHtcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoMzQsMzEsMzIpO1xufVxuXG5pb24tY2FyZCB7XG4gIHdpZHRoOiA5MCU7XG4gIGhlaWdodDogYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiAyJTtcbiAgYm94LXNoYWRvdzogNnB4IDRweCA1cHggcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBnYWluc2Jvcm87XG59XG5cbmlvbi1idXR0b24ge1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogNXB4O1xufVxuXG5pb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbn1cblxuLmltZ0NvbnRhaW5lciB7XG4gIGhlaWdodDogMjMwcHg7XG4gIHdpZHRoOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbiNmYWNlSW1nIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGhlaWdodDogMTgwcHg7XG4gIHdpZHRoOiAxODBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4ubmFtZUNvbnRhaW5lciB7XG4gIGhlaWdodDogNzBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2Fzc2V0cy9iYWNrZ3JvdW5kX2ltZ3MvbmFtZXRhZy5wbmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDEwMCU7XG4gIC8qd2lkdGgsIGhlaWdodCovXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4ubmFtZUNvbnRhaW5lciAjbmFtZURpc3BsYXkge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5uYW1lQ29udGFpbmVyICNuYW1lRGlzcGxheSAjbmFtZVRleHQge1xuICBjb2xvcjogI2NlYjc3YztcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogbGFyZ2U7XG4gIG1hcmdpbjogNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTU1JSwgMCk7XG4gIGJvdHRvbTogMTUlO1xufSJdfQ== */\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-learning-task',\n  templateUrl: './learning-task.component.html',\n  styleUrls: ['./learning-task.component.scss'],\n})\nexport class LearningTaskComponent implements OnInit {\n  @Input() setNames : string;\n  @Input() facePaths : string[];\n  @Output() finished = new EventEmitter<void>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  progress : number = 0;\n  progressPercent : number = 0;\n  seenAll : boolean = false;\n\n  changeCard(direction : string) {\n    if (direction == 'next') {\n      this.progress++;\n    } else {\n      this.progress--;\n    }\n    if (!this.seenAll) {\n      this.progressPercent = this.progress/(this.facePaths.length - 1);\n    }\n    if (this.progress == 7) {\n      this.seenAll = true;\n    }\n  }\n\n}\n","export default \"ion-card {\\n  text-align: center;\\n  background-color: gainsboro;\\n  display: inline-block;\\n  margin: 0px;\\n  height: 78px;\\n  width: 78px;\\n}\\nion-card img {\\n  height: 70px;\\n  width: 70px;\\n  margin-left: 4px;\\n  margin-top: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL21lbW9yeS1tYXRjaC9tZW1vcnktbWF0Y2guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21lbW9yeS1tYXRjaC9tZW1vcnktbWF0Y2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLDJCQUFBO0VBQ0EscUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDSjtBREFJO0VBQ0ksWUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUNFUiIsImZpbGUiOiJzcmMvYXBwL21lbW9yeS1tYXRjaC9tZW1vcnktbWF0Y2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdhaW5zYm9ybztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgaGVpZ2h0OiA3OHB4O1xuICAgIHdpZHRoOiA3OHB4O1xuICAgIGltZyB7XG4gICAgICAgIGhlaWdodDogNzBweDtcbiAgICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICB9ICAgIFxufSIsImlvbi1jYXJkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBnYWluc2Jvcm87XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwcHg7XG4gIGhlaWdodDogNzhweDtcbiAgd2lkdGg6IDc4cHg7XG59XG5pb24tY2FyZCBpbWcge1xuICBoZWlnaHQ6IDcwcHg7XG4gIHdpZHRoOiA3MHB4O1xuICBtYXJnaW4tbGVmdDogNHB4O1xuICBtYXJnaW4tdG9wOiA0cHg7XG59Il19 */\"","import { Component, OnInit, EventEmitter, Output, Input, ViewChild } from '@angular/core';\nimport { timer, interval } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createAnimation } from '@ionic/core';\nimport { IonSlides } from '@ionic/angular';\n\nenum Stage { START, MEMORIZE, MASK, SELECT, CORRECT, INCORRECT }\n\n@Component({\n  selector: 'app-memory-match',\n  templateUrl: './memory-match.component.html',\n  styleUrls: ['./memory-match.component.scss'],\n})\nexport class MemoryMatchComponent implements OnInit {\n  @Input() facePaths : string[];\n  @Output() finished = new EventEmitter<[number, number]>();\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    this.stage = Stage.START;\n    this.score = 0;\n    this.promise = 0;\n    this.progressPercent = 0;\n    this.selectedFace = null;\n    this.correctFaces = [];\n    this.incorrectFaces = [];\n    this.firstSlide = true;\n    this.changeScore = createAnimation();\n\n    // Init list of faces\n    this.randomFaces = [];\n    for (let i = 0; i < this.facePaths.length; i++) {\n      this.randomFaces.push(this.facePaths[i]);\n      this.randomFaces.push(this.facePaths[i]);\n    }\n    // Shuffle the faces\n    for (let i = this.randomFaces.length - 1; i > 0; i -= 1) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = this.randomFaces[i];\n      this.randomFaces[i] = this.randomFaces[j];\n      this.randomFaces[j] = temp;\n    }\n\n    this.timer = timer(500).subscribe(async () => {\n      let fadeIn = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(500)\n        .fromTo('opacity', '0', '.9');\n      await fadeIn.play();\n      if (this.stage == Stage.START) {\n        Array.from(document.getElementsByClassName('overlay') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '.9';\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.slideElement.lockSwipes(true);\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      this.interval.unsubscribe();\n    }\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n\n  finish(event : any) {\n    this.finished.emit([this.score, event])\n    if (event == 0) { // Reload and retry\n      this.ngOnInit();\n      this.slideElement.lockSwipes(false);\n      this.slideElement.slideTo(0);\n      this.slideElement.lockSwipes(true);\n    }\n  }\n\n  Stage = Stage;\n  mask : string = 'assets/background_imgs/mask1.png';\n  memorizeTime : number = 15;//Changed this from 10 to 15\n  taskLength : number = 32;\n\n  stage : Stage;\n  score : number;\n  promise : number;\n  progressPercent : number;\n  timeRemaining : number;\n  interval : any;\n  timer : any;\n  changeScore : any;\n  firstSlide : boolean;\n\n  randomFaces : string[];\n  correctFaces : string[];\n  incorrectFaces : number[];\n  selectedFace : number;\n\n  async clickFace(face : number) {\n    if (this.stage != Stage.START && this.stage != Stage.MEMORIZE && this.stage != Stage.MASK) { // Waiting for feedback\n      if (this.stage == Stage.CORRECT || this.stage == Stage.INCORRECT) {\n        this.promise++;\n        this.selectedFace = null;\n        this.resetSelected();\n      }\n      if (this.correctFaces.indexOf(this.randomFaces[face]) < 0 && face != this.selectedFace) { // Click on a valid face\n\n        if (this.selectedFace == null) { // Select first face\n          this.selectedFace = face;\n\n        } else if (this.randomFaces[face] == this.randomFaces[this.selectedFace]) { // Correct\n          this.correctFaces.push(this.randomFaces[face]);\n          this.progressPercent = this.correctFaces.length/this.facePaths.length;\n          this.score += this.taskLength / this.facePaths.length;\n          this.stage = Stage.CORRECT;\n\n          if (this.correctFaces.length == this.facePaths.length) { // Done\n            this.score = Math.ceil(this.score);\n            this.slideElement.lockSwipes(false);\n            this.revealFooter();\n          }\n          await this.waitForFeedback();\n\n        } else { // Incorrect\n          this.incorrectFaces.push(this.selectedFace);\n          this.incorrectFaces.push(face);\n          this.score = this.score >= 1 ? this.score - 1 : 0;\n          this.stage = Stage.INCORRECT;\n          await this.waitForFeedback();\n        }\n      }\n    }\n  }\n\n  imageIsDisplayed(index : number) {\n    return (\n      this.stage == Stage.MEMORIZE ||\n      this.stage == Stage.MASK ||\n      this.incorrectFaces.indexOf(index) > -1 ||\n      this.correctFaces.indexOf(this.randomFaces[index]) > -1 ||\n      this.selectedFace == index\n    )\n  }\n\n  resetSelected() {\n    this.incorrectFaces = [];\n    this.stage = Stage.SELECT;\n    this.changeScore.stop();\n  }\n\n  async waitForFeedback() {\n    this.selectedFace = null;\n\n    if (this.stage == Stage.INCORRECT || this.stage == Stage.CORRECT) {\n      this.changeScore = createAnimation()\n        .addElement(document.querySelectorAll('.score-change'))\n        .fill('none')\n        .duration(2000)\n        .keyframes([\n          { offset: 0, transform: 'translateY(0%)' },\n          { offset: 0.05, transform: 'translateY(100%)' },\n          { offset: 0.1, transform: 'translateY(200%)' },\n          { offset: 0.3, transform: 'translateY(200%)' },\n          { offset: 0.5, transform: 'translateY(200%)' },\n          { offset: 0.7, transform: 'translateY(200%)' },\n          { offset: 0.9, transform: 'translateY(200%)' },\n          { offset: 0.95, transform: 'translateY(100%)' },\n          { offset: 1, transform: 'translateY(0%)' }\n        ]);\n      this.changeScore.play();\n    }\n\n    let promise = this.promise;\n    await new Promise( resolve => setTimeout(resolve, 2000) );\n    promise == this.promise ? this.resetSelected() : null;\n  }\n\n  async startMemorizeTimer() {\n\n    if (this.stage == Stage.START) {\n\n      let fadeOutOverlay = createAnimation()\n      .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(200)\n        .fromTo('opacity', '.9', '0');\n      await fadeOutOverlay.play();\n\n      this.timeRemaining = this.memorizeTime;\n      this.stage = Stage.MEMORIZE;\n\n      this.timer = timer(this.timeRemaining * 1000).subscribe(() => {\n        this.startMaskTimer();\n      });\n\n      this.interval = interval(1000)\n        .pipe(\n          takeUntil(timer(this.timeRemaining * 1000))\n        )\n        .subscribe(async () => {\n          let first = createAnimation()\n            .addElement(document.querySelector('.time-left'))\n            .fill('none')\n            .duration(100)\n            .keyframes([\n              { offset: 0, transform: 'translateY(0%)', opacity: '1' },\n              { offset: 1, transform: 'translateY(100%)', opacity: '0' }\n            ]);\n          await first.play();\n          this.timeRemaining--;\n          let second = createAnimation()\n            .addElement(document.querySelector('.time-left'))\n            .fill('none')\n            .duration(100)\n            .keyframes([\n              { offset: 0, transform: 'translateY(-100%)', opacity: '0' },\n              { offset: 1, transform: 'translateY(0%)', opacity: '1' }\n            ]);\n          await second.play();\n        });\n    }\n\n  }\n\n  startMaskTimer() {\n    this.stage = Stage.MASK;\n    this.timer = timer(2000).subscribe(() => {\n      this.stage = Stage.SELECT;\n    });\n  }\n\n  scoreCardDisplayed() {\n    return !this.firstSlide;\n  }\n\n  revealFooter() {\n    this.timer = timer(500).subscribe(async () => {\n      let fadeIn = createAnimation()\n        .addElement(document.querySelectorAll('.footer'))\n        .fill('none')\n        .duration(500)\n        .fromTo('opacity', '0', '0.75');\n      await fadeIn.play();\n      Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '0.75';  \n    });\n  }\n}","export default \"ion-card {\\n  text-align: center;\\n  height: 110px;\\n  width: 107px;\\n  margin: 0px;\\n}\\nion-card img {\\n  height: 100px;\\n  width: 100px;\\n  margin-left: 3px;\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL25hbWUtZmFjZS9uYW1lLWZhY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL25hbWUtZmFjZS9uYW1lLWZhY2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyxrQkFBQTtFQUNHLGFBQUE7RUFDSCxZQUFBO0VBQ0EsV0FBQTtBQ0NEO0FEQUM7RUFDQyxhQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvbmFtZS1mYWNlL25hbWUtZmFjZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGhlaWdodDogMTEwcHg7XG5cdHdpZHRoOiAxMDdweDtcblx0bWFyZ2luOiAwcHg7XG5cdGltZyB7XG5cdFx0aGVpZ2h0OiAxMDBweDtcblx0XHR3aWR0aDogMTAwcHg7XG5cdFx0bWFyZ2luLWxlZnQ6IDNweDtcblx0XHRtYXJnaW4tdG9wOiA1cHg7XG5cdH1cbn0iLCJpb24tY2FyZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMTBweDtcbiAgd2lkdGg6IDEwN3B4O1xuICBtYXJnaW46IDBweDtcbn1cbmlvbi1jYXJkIGltZyB7XG4gIGhlaWdodDogMTAwcHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xufSJdfQ== */\"","import { Component, OnInit, EventEmitter, Output, Input, ViewChild } from '@angular/core';\nimport { IonSlides } from '@ionic/angular';\nimport { timer } from 'rxjs';\nimport { createAnimation } from '@ionic/core';\n\nenum Stage { SELECT, CORRECT, INCORRECT }\n\n@Component({\n  selector: 'app-name-face',\n  templateUrl: './name-face.component.html',\n  styleUrls: ['./name-face.component.scss'],\n})\nexport class NameFaceComponent implements OnInit {\n  @Input() setNames : string[];\n  @Input() facePaths : string[];\n  @Output() finished = new EventEmitter<[number, number]>();\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor() {}\n\n  ngOnInit() {\n\n    this.score = 0;\n    this.currentSlide = 0;\n    this.progressPercent = 0;\n    this.fadeIn = createAnimation();\n    this.changeScore = createAnimation();\n    this.taskLength = this.facePaths.length;\n\n    // Initialize shuffled name list\n    this.shuffledNames = [];\n    for (let name = 0; name < this.taskLength; name++) {\n      this.shuffledNames.push(this.setNames[name]);\n    }\n    // Shuffle Names\n    for (let i = this.taskLength - 1; i > 0; i -= 1) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = this.shuffledNames[i];\n      this.shuffledNames[i] = this.shuffledNames[j];\n      this.shuffledNames[j] = temp;\n    }\n\n    this.slideInfo = [];\n    for (let i = 0; i < this.taskLength; i++) {\n      this.slideInfo.push({\n        correctName: this.shuffledNames[i],\n        correctFace: this.facePaths[this.setNames.indexOf(this.shuffledNames[i])],\n        selectedFace: null,\n        faces: this.getSlideFaces(i),\n        stage: Stage.SELECT\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.slideElement.lockSwipes(true);\n  }\n\n  finish(event : any) {\n    this.finished.emit([this.score, event])\n    if (event == 0) { // Reload and retry\n      this.ngOnInit();\n      this.slideElement.lockSwipes(false);\n      this.slideElement.slideTo(0);\n      this.slideElement.lockSwipes(true);\n    }\n  }\n\n  Stage = Stage;\n  numberOfOptions : number = 6;\n\n  score : number;\n  currentSlide : number;\n  progressPercent : number;\n  taskLength : number;\n  shuffledNames : any;\n  slideInfo : any;\n  fadeIn : any;\n  changeScore : any;\n\n  selectFace(face : string) {\n    if (this.slideInfo[this.currentSlide].stage == Stage.SELECT) {\n      this.slideInfo[this.currentSlide].selectedFace = face;\n      if (face == this.slideInfo[this.currentSlide].correctFace) {\n        this.score++;\n        this.slideInfo[this.currentSlide].stage = Stage.CORRECT;\n        this.changeScore = createAnimation()\n          .addElement(document.querySelectorAll('.score-change'))\n          .fill('none')\n          .duration(2000)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 0.05, transform: 'translateY(100%)' },\n            { offset: 0.1, transform: 'translateY(200%)' },\n            { offset: 0.3, transform: 'translateY(200%)' },\n            { offset: 0.5, transform: 'translateY(200%)' },\n            { offset: 0.7, transform: 'translateY(200%)' },\n            { offset: 0.9, transform: 'translateY(200%)' },\n            { offset: 0.95, transform: 'translateY(100%)' },\n            { offset: 1, transform: 'translateY(0%)' }\n          ]);\n        this.changeScore.play();\n      } else {\n        this.slideInfo[this.currentSlide].stage = Stage.INCORRECT;\n      }\n      this.progressPercent = (this.currentSlide + 1)/this.taskLength;\n\n      this.slideElement.lockSwipes(false);\n      this.slideElement.lockSwipeToPrev(true);\n      \n      let slide = this.currentSlide;\n      timer(1000).subscribe(async () => {\n        this.fadeIn = createAnimation()\n          .addElement(document.querySelectorAll('.footer'))\n          .fill('none')\n          .duration(500)\n          .fromTo('opacity', '0', '0.75');\n        if (slide == this.currentSlide) {\n          await this.fadeIn.play();\n          Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>)[this.currentSlide].style.opacity = '.75';  \n        }\n      });\n    }\n  }\n\n  getSlideFaces(index : number) {\n    let faces = [];\n    for (let i = 0; i < this.numberOfOptions - 1; i++) { // Select five faces\n      let j = Math.floor(Math.random() * this.taskLength);\n      while (faces.indexOf(this.facePaths[j]) > -1 || this.facePaths[j] == this.facePaths[this.setNames.indexOf(this.shuffledNames[index])]) { // Account for repeats\n        j = Math.floor(Math.random() * this.taskLength);\n      }\n      faces.push(this.facePaths[j]);\n    }\n    let j = Math.floor(Math.random() * this.numberOfOptions);\n    faces.splice(j, 0, this.facePaths[this.setNames.indexOf(this.shuffledNames[index])]); // Add in current face\n    return faces;\n  }\n\n  showDisabled(face : number) {\n    return this.showFeedback() && this.slideInfo[this.currentSlide].correctFace != this.slideInfo[this.currentSlide].faces[face];\n  }\n\n  showSelected(face : number) {\n    return this.showFeedback() &&\n      this.slideInfo[this.currentSlide].faces[face] != this.slideInfo[this.currentSlide].correctFace &&\n      this.slideInfo[this.currentSlide].faces[face] == this.slideInfo[this.currentSlide].selectedFace;\n  }\n\n  getName(face : number) {\n    if (this.showFeedback() && (!this.showDisabled(face) || this.showSelected(face))) {\n      return this.setNames[this.facePaths.indexOf(this.slideInfo[this.currentSlide].faces[face])];\n    } else {\n      return '  ';\n    }\n  }\n\n  showFeedback() {\n    return !this.scoreCardDisplayed() && (this.slideInfo[this.currentSlide].stage == Stage.CORRECT || this.slideInfo[this.currentSlide].stage == Stage.INCORRECT);\n  }\n\n  scoreCardDisplayed() {\n    return this.currentSlide >= this.taskLength;\n  }\n\n  async changeSlide() {\n    if (await this.slideElement.getActiveIndex() > this.currentSlide) {\n      this.currentSlide = await this.slideElement.getActiveIndex();\n      await this.slideElement.lockSwipes(true);\n      await this.changeScore.stop();\n      await this.fadeIn.stop();\n      let footers = Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>);\n      for (let i = 0; i < footers.length; i++) {\n        footers[i].style.opacity = '0';\n      }\n    }\n  }\n}\n","export default \"ion-item {\\n  --background: dodgerblue;\\n}\\n\\ndiv {\\n  color: white;\\n  text-align: center;\\n}\\n\\n.hidden {\\n  visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL3JhY2Utc2VsZWN0LW1vZGFsL3JhY2Utc2VsZWN0LW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9yYWNlLXNlbGVjdC1tb2RhbC9yYWNlLXNlbGVjdC1tb2RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURTQTtFQUNJLGtCQUFBO0FDTkoiLCJmaWxlIjoic3JjL2FwcC9yYWNlLXNlbGVjdC1tb2RhbC9yYWNlLXNlbGVjdC1tb2RhbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pdGVtIHtcbiAgICAtLWJhY2tncm91bmQ6IGRvZGdlcmJsdWU7XG59XG5cbmRpdiB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLy8gaW1nIHtcbi8vICAgICBoZWlnaHQ6IDU1dmg7XG4vLyAgICAgd2lkdGg6IGF1dG87XG4vLyAgICAgbWFyZ2luOiAwIGF1dG87XG4vLyAgICAgYm9yZGVyLXJhZGl1czogNSU7XG4vLyB9XG5cbi5oaWRkZW4ge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbn0iLCJpb24taXRlbSB7XG4gIC0tYmFja2dyb3VuZDogZG9kZ2VyYmx1ZTtcbn1cblxuZGl2IHtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oaWRkZW4ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59Il19 */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalController, NavParams, IonSlides } from '@ionic/angular';\nconst raceValues = ['Asian', 'Black', 'Latino', 'White']\n\nconst numRaceSets = 4;\n\n@Component({\n  selector: 'app-race-select-modal',\n  templateUrl: './race-select-modal.component.html',\n  styleUrls: ['./race-select-modal.component.scss'],\n})\n\nexport class RaceSelectModalComponent implements OnInit {\n  @Input() firstDisplayed : boolean;\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor(private modalController: ModalController) { }\n\n  ngOnInit() {\n    this.cards = raceValues;\n    this.hideStart = true;\n  }\n\n  cards : string[];\n  hideStart : boolean;\n  currentRace : string;\n\n  // async closeModal(currentRace : string) {\n  async closeModal() {\n    // const onClosedData: string = \"Closed\";\n    // await this.modalController.dismiss(onClosedData);\n    await this.modalController.dismiss(this.currentRace);\n  }\n\n  selectedRace(value: string) {\n    this.hideStart = false;\n    this.currentRace = value;\n  }\n}\n","export default \".swipe-card {\\n  background-color: gainsboro;\\n  height: 310px;\\n  width: 270px;\\n  display: flex;\\n  justify-content: space-evenly;\\n  align-items: center;\\n}\\n\\n.swipe-footer {\\n  opacity: 0;\\n  background: transparent;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL3NhbWUtZGlmZmVyZW50L3NhbWUtZGlmZmVyZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zYW1lLWRpZmZlcmVudC9zYW1lLWRpZmZlcmVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDJCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsNkJBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVBO0VBQ0MsVUFBQTtFQUNHLHVCQUFBO0VBQ0EsV0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvc2FtZS1kaWZmZXJlbnQvc2FtZS1kaWZmZXJlbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3dpcGUtY2FyZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ2FpbnNib3JvO1xuICAgIGhlaWdodDogMzEwcHg7XG4gICAgd2lkdGg6IDI3MHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnN3aXBlLWZvb3RlciB7XG5cdG9wYWNpdHk6IDA7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgd2lkdGg6IDEwMCU7XG59IiwiLnN3aXBlLWNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBnYWluc2Jvcm87XG4gIGhlaWdodDogMzEwcHg7XG4gIHdpZHRoOiAyNzBweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5zd2lwZS1mb290ZXIge1xuICBvcGFjaXR5OiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { Component, OnInit, EventEmitter, Output, Input, ViewChild } from '@angular/core';\nimport { timer, interval } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createAnimation } from '@ionic/core';\nimport { IonSlides } from '@ionic/angular';\n\nenum Stage { START, MEMORIZE, MASK, SELECT, CORRECT, INCORRECT }\n\n@Component({\n  selector: 'app-same-different',\n  templateUrl: './same-different.component.html',\n  styleUrls: ['./same-different.component.scss'],\n})\nexport class SameDifferentComponent implements OnInit {\n  @Input() facePaths : string[];\n  @Output() finished = new EventEmitter<[number, number]>();\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    this.currentSlide = 0;\n    this.progressPercent = 0;\n    this.score = 0;\n    this.fadeIn = createAnimation();\n    this.changeScore = createAnimation();\n    this.taskLength = this.facePaths.length;\n\n    this.slideInfo = [];\n    for (let i = 0; i < this.taskLength; i++) {\n\n      let displayedFace = this.facePaths[i];\n      if (Math.random() > .5) {\n        displayedFace = this.facePaths[Math.floor(Math.random() * this.taskLength)];\n      }\n\n      this.slideInfo.push({\n        correctFace: this.facePaths[i],\n        displayedFace: displayedFace,\n        selection: null,\n        stage: Stage.START\n      });\n\n    }\n\n    this.timer = timer(500).subscribe(async () => {\n      let fadeInOverlay = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(500)\n        .fromTo('opacity', '0', '.9');\n      await fadeInOverlay.play();\n      if (this.slideInfo[this.currentSlide].stage == Stage.START) {\n        Array.from(document.getElementsByClassName('overlay') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '.9';\n      }\n    });\n\n  }\n\n  ngAfterViewInit() {\n    this.slideElement.lockSwipes(true);\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      this.interval.unsubscribe();\n    }\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n\n  Stage = Stage;\n  mask : string = 'assets/background_imgs/mask1.png';\n  memorizeTime : number = 3;\n\n  currentSlide : number\n  progressPercent : number;\n  score : number;\n  timeRemaining : number;\n  taskLength : number;\n  interval : any;\n  timer : any;\n  slideInfo : any;\n  fadeIn : any;\n  changeScore : any;\n\n  async selectFace(sameFace : boolean) {\n    if (this.slideInfo[this.currentSlide].stage == Stage.SELECT) {\n\n      if (sameFace) {\n        let swipeRight = createAnimation()\n        .addElement(document.querySelector('.swipe-card'))\n        .fill('none')\n        .duration(200)\n        .keyframes([\n          { offset: 0, transform: 'translateX(0%)' },\n          { offset: 1, transform: 'translateX(-100%)' }\n        ]);\n        await swipeRight.play();\n      } else {\n        let swipeLeft = createAnimation()\n        .addElement(document.querySelector('.swipe-card'))\n        .fill('none')\n        .duration(200)\n        .keyframes([\n          { offset: 0, transform: 'translateX(0%)' },\n          { offset: 1, transform: 'translateX(100%)' }\n        ]);\n        await swipeLeft.play();\n      }\n\n      this.slideInfo[this.currentSlide].selection = sameFace;\n      if (sameFace == (this.slideInfo[this.currentSlide].displayedFace == this.slideInfo[this.currentSlide].correctFace)) {\n        this.score++;\n        this.slideInfo[this.currentSlide].stage = Stage.CORRECT;\n        this.changeScore = createAnimation()\n          .addElement(document.querySelectorAll('.score-change'))\n          .fill('none')\n          .duration(2000)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 0.05, transform: 'translateY(100%)' },\n            { offset: 0.1, transform: 'translateY(200%)' },\n            { offset: 0.3, transform: 'translateY(200%)' },\n            { offset: 0.5, transform: 'translateY(200%)' },\n            { offset: 0.7, transform: 'translateY(200%)' },\n            { offset: 0.9, transform: 'translateY(200%)' },\n            { offset: 0.95, transform: 'translateY(100%)' },\n            { offset: 1, transform: 'translateY(0%)' }\n          ]);\n        this.changeScore.play();\n      } else {\n        this.slideInfo[this.currentSlide].stage = Stage.INCORRECT;\n      }\n      this.progressPercent = (this.currentSlide + 1)/this.taskLength;\n\n      this.slideElement.lockSwipes(false);\n      this.slideElement.lockSwipeToPrev(true);\n      \n      let slide = this.currentSlide;\n      timer(1000).subscribe(async () => {\n        this.fadeIn = createAnimation()\n          .addElement(document.querySelectorAll('.footer'))\n          .fill('none')\n          .duration(500)\n          .fromTo('opacity', '0', '0.75');\n        if (slide == this.currentSlide) {\n          await this.fadeIn.play();\n          Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>)[this.currentSlide].style.opacity = '.75';  \n        }\n      });\n    }\n  }\n\n  async startMemorizeTimer() {\n\n    if (this.currentSlide == 0) {\n      let fadeOutOverlay = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(200)\n        .fromTo('opacity', '.9', '0');\n      await fadeOutOverlay.play();\n    }\n\n    this.timeRemaining = this.memorizeTime;\n    this.slideInfo[this.currentSlide].stage = Stage.MEMORIZE;\n    this.timer = timer(this.timeRemaining * 1000).subscribe(() => {\n      this.startMaskTimer();\n    });\n    this.interval = interval(1000)\n      .pipe(\n        takeUntil(timer(this.timeRemaining * 1000))\n      )\n      .subscribe(async () => {\n        let first = createAnimation()\n          .addElement(document.querySelector('.time-left'))\n          .fill('none')\n          .duration(100)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)', opacity: '1' },\n            { offset: 1, transform: 'translateY(100%)', opacity: '0' }\n          ]);\n        await first.play();\n        this.timeRemaining--;\n        let second = createAnimation()\n          .addElement(document.querySelector('.time-left'))\n          .fill('none')\n          .duration(100)\n          .keyframes([\n            { offset: 0, transform: 'translateY(-100%)', opacity: '0' },\n            { offset: 1, transform: 'translateY(0%)', opacity: '1' }\n          ]);\n        await second.play();\n      });\n  }\n\n  startMaskTimer() {\n    this.slideInfo[this.currentSlide].stage = Stage.MASK;\n    this.timer = timer(2000).subscribe(() => {\n      this.slideInfo[this.currentSlide].stage = Stage.SELECT;\n      timer(500).subscribe(async () => {\n        let fadeInSwipe = createAnimation()\n          .addElement(document.querySelector('.swipe-footer'))\n          .fill('none')\n          .duration(500)\n          .fromTo('opacity', '0', '1');\n        await fadeInSwipe.play();\n        if (this.slideInfo[this.currentSlide].stage == Stage.SELECT) {\n          Array.from(document.getElementsByClassName('swipe-footer') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '1';  \n        }\n      });      \n    });\n  }\n\n  getSrc(index : number) {\n    if (this.slideInfo[index].stage == Stage.MEMORIZE) {\n      return this.slideInfo[index].correctFace;\n    } else if (this.slideInfo[index].stage == Stage.MASK) {\n      return this.mask;\n    } else {\n      return this.slideInfo[index].displayedFace;\n    }\n  }\n\n  showFeedback() {\n    return !this.scoreCardDisplayed() && (this.slideInfo[this.currentSlide].stage == Stage.CORRECT || this.slideInfo[this.currentSlide].stage == Stage.INCORRECT);\n  }\n\n  scoreCardDisplayed() {\n    return this.currentSlide >= this.taskLength;\n  }\n\n  async changeSlide() {\n    if (await this.slideElement.getActiveIndex() > this.currentSlide) {\n      this.currentSlide = await this.slideElement.getActiveIndex();\n      await this.slideElement.lockSwipes(true);\n      await this.changeScore.stop();\n      await this.fadeIn.stop();\n      let footers = Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>);\n      for (let i = 0; i < footers.length; i++) {\n        footers[i].style.opacity = '0';\n      }\n\n      if (!this.scoreCardDisplayed()) {\n        this.startMemorizeTimer();\n      }\n    }\n  }\n}\n","export default \"ion-button {\\n  height: 8vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL3Njb3JlLXBhZ2Uvc2NvcmUtcGFnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2NvcmUtcGFnZS9zY29yZS1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvc2NvcmUtcGFnZS9zY29yZS1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiA4dmg7XG59IiwiaW9uLWJ1dHRvbiB7XG4gIGhlaWdodDogOHZoO1xufSJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-score-page',\n  templateUrl: './score-page.component.html',\n  styleUrls: ['./score-page.component.scss'],\n})\nexport class ScorePageComponent implements OnInit {\n  @Input() score : number;\n  @Input() length : number;\n  @Input() assessment : boolean;\n  @Output() finished = new EventEmitter<number>();\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  minTrainScore : number = 0.75; // Should be equal to minTrainScore in training\n  replay_icon : string = \"assets/icon/replay.svg\";\n  face_icon : string = \"assets/icon/face.svg\";\n\n  failed() {\n    return this.score < this.length * this.minTrainScore && !this.assessment\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmitScoresService {\n\n  constructor(public http : HttpClient) { }\n\n  base_url : string = environment.backendBaseUrl;\n  scores_url : string = this.base_url + \"tasks/\";\n  pre_url : string = this.base_url + \"preassessment/\";\n  post_url : string = this.base_url + \"postassessment/\";\n\n  //general\n  race : string;\n  body : any;\n  //tasks\n  level : number;\n  shuffle : number = 0;\n  memory : number = 0;\n  whosnew : number = 0;\n  nameface : number = 0;\n  forcedchoice : number = 0;\n  samedifferent : number = 0;\n  //pre_assessment\n  pre_score : number = 0;\n  //post_assessment\n  post_score : number = 0;\n\n  //scores array is like:\n  //[nameface, whosnew, memory, shuffle, forcedchoice, samedifferent]\n\n\n  /**********************************************\n  TASKS\n    To submit scores, inject this service into the component that needs to submit,\n      then call this.submitScores.submitTaskScores(level, scores, race)\n      where level is a number, scores is an array of scores in the order\n      of the normal scores array, and race is a string defaulted to \"Black\".\n  **********************************************/\n  /**********************************************\n  PRE and POST\n    To submit scores, inject, then call either submitPreAssessment or submitPostAssessment\n    Both functions take (score: number, race: string (optional, default \"Black\"))\n  **********************************************/\n\n  //TASKS\n  setScores(level: number, scores: number[], race: string = \"black\"): Promise<any> {\n    let promise = new Promise<void>((resolve, reject) => {\n      this.level = level;\n      this.race = race;\n      this.nameface = scores[0];\n      this.whosnew = scores[1];\n      this.memory = scores[2];\n      this.shuffle = scores[3];\n      this.forcedchoice = scores[4];\n      this.samedifferent = scores[5];\n\n      this.body = {\n        \"level\": this.level,\n        \"race\": this.race,\n        \"shuffle\": this.shuffle,\n        \"memory\": this.memory,\n        \"whosnew\": this.whosnew,\n        \"nameface\": this.nameface,\n        \"forcedchoice\": this.forcedchoice,\n        \"samedifferent\": this.samedifferent\n      };\n\n      resolve();\n    });\n    return promise;\n  }\n\n  async putScores(level: number, scores: number[], race: string = \"black\") {\n    const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n\n    await this.setScores(level, scores, race);\n\n    console.log(\"Sent: \", JSON.stringify(this.body));\n    this.http.post(this.scores_url, this.body, httpOptions).subscribe((response: Response) => {\n      console.log(\"Response: \", response);\n    }, (err) => {\n      console.log(\"Error: \", err);\n    });\n  }\n\n  submitTaskScores(level: number, scores : number[], race: string = \"black\")\n  {\n    this.putScores(level, scores, race);\n  }\n\n\n  //PRE-ASSESSMENT\n  setPre(score: number, race: string = \"black\"): Promise<any>{\n    let promise = new Promise<void>((resolve, reject) => {\n      this.pre_score = score;\n      this.race = race;\n\n      this.body = {\n        \"score\": this.pre_score,\n        \"race\": this.race\n      }\n\n      resolve();\n    });\n\n    return promise;\n  }\n\n  async submitPreAssessment(score: number, race: string = \"black\") {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      })\n    };\n\n    await this.setPre(score, race);\n\n    console.log(\"Sent to pre: \", JSON.stringify(this.body));\n    this.http.put(this.pre_url, this.body, httpOptions).subscribe((response: Response) => {\n      console.log(\"Response: \", response);\n      console.log(\"status: \", response.status);\n    }, (err) => {\n      console.log(\"Error: \", err);\n    });\n  }\n\n  //POST-ASSESSMENT\n  setPost(score: number, race: string = \"black\"): Promise<any>{\n    let promise = new Promise<void>((resolve, reject) => {\n      this.post_score = score;\n      this.race = race;\n\n      this.body = {\n        \"score\": this.post_score,\n        \"race\": this.race\n      }\n\n      resolve();\n    });\n\n    return promise;\n  }\n\n  async submitPostAssessment(score: number, race: string = \"black\") {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      })\n    };\n\n    await this.setPost(score, race);\n\n    console.log(\"Sent to post: \", JSON.stringify(this.body));\n    this.http.put(this.post_url, this.body, httpOptions).subscribe((response: Response) => {\n      console.log(\"Response: \", response);\n      console.log(\"status: \", response.status);\n    }, (err) => {\n      console.log(\"Error: \", err);\n    });\n  }\n\n}\n","export default \".wrong-card {\\n  background-color: transparent !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL3NodWZmbGUvc2h1ZmZsZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2h1ZmZsZS9zaHVmZmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksd0NBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3NodWZmbGUvc2h1ZmZsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53cm9uZy1jYXJkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xufSIsIi53cm9uZy1jYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit, EventEmitter, Output, Input, ViewChild } from '@angular/core';\nimport { timer, interval } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createAnimation } from '@ionic/core';\nimport { IonSlides } from '@ionic/angular';\n\nenum Stage { START, MEMORIZE, MASK, SELECT, CORRECT, INCORRECT }\n\n@Component({\n  selector: 'app-shuffle',\n  templateUrl: './shuffle.component.html',\n  styleUrls: ['./shuffle.component.scss'],\n})\nexport class ShuffleComponent implements OnInit {\n  @Input() facePaths : string[];\n  @Output() finished = new EventEmitter<[number, number]>();\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    this.currentSlide = 0;\n    this.progressPercent = 0;\n    this.score = 0;\n    this.fadeIn = createAnimation();\n    this.changeScore = createAnimation();\n\n    this.slideInfo = [];\n    for (let i = 0; i < this.numberOfSlides; i++) {\n      let correctFaces = this.getSlideFaces(i);\n      this.slideInfo.push({\n        correctOrder: correctFaces,\n        shuffledOrder: this.shuffleFaces(correctFaces),\n        stage: Stage.START,\n        feedback: true,\n        selectedFace: null\n      });\n    }\n\n    this.timer = timer(500).subscribe(async () => {\n      let fadeInOverlay = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(500)\n        .fromTo('opacity', '0', '.9');\n      await fadeInOverlay.play();\n      if (this.slideInfo[this.currentSlide].stage == Stage.START) {\n        Array.from(document.getElementsByClassName('overlay') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '.9';\n      }\n    });\n\n  }\n\n  ngAfterViewInit() {\n    this.slideElement.lockSwipes(true);\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      this.interval.unsubscribe();\n    }\n    if (this.timer) {\n      this.timer.unsubscribe();\n    }\n  }\n\n  finish(event : any) {\n    this.finished.emit([this.score, event])\n    if (event == 0) { // Reload and retry\n      this.ngOnInit();\n      this.slideElement.lockSwipes(false);\n      this.slideElement.slideTo(0);\n      this.slideElement.lockSwipes(true);\n    }\n  }\n\n  Stage = Stage;\n  numberOfOptions = 4;\n  numberOfSlides = 4;\n  mask : string = 'assets/background_imgs/mask1.png';\n  memorizeTime : number = 10;\n  taskLength : number = this.numberOfOptions * this.numberOfSlides; // 16\n\n  currentSlide : number;\n  progressPercent : number;\n  score : number;\n  changeScoreValue : number;\n  timeRemaining : number;\n  interval : any;\n  timer : any;\n  slideInfo : any;\n  fadeIn : any;\n  changeScore : any;\n\n  clickDone() {\n    this.changeScoreValue = this.numberOfOptions;\n    this.slideInfo[this.currentSlide].selectedFace = null;\n    for (let i = 0; i < this.slideInfo[this.currentSlide].shuffledOrder.length; i++) {\n      if (this.slideInfo[this.currentSlide].shuffledOrder[i] != this.slideInfo[this.currentSlide].correctOrder[i]) {\n        this.changeScoreValue -= 1;\n      }\n    }\n    this.score += this.changeScoreValue;\n    if (this.changeScoreValue == this.numberOfOptions) {\n      this.slideInfo[this.currentSlide].stage = Stage.CORRECT;\n    } else {\n      this.slideInfo[this.currentSlide].stage = Stage.INCORRECT;\n    }\n    this.progressPercent = (this.currentSlide + 1)/this.numberOfSlides;\n\n    this.slideElement.lockSwipes(false);\n    this.slideElement.lockSwipeToPrev(true);\n    \n    let slide = this.currentSlide;\n    timer(1000).subscribe(async () => {\n      this.fadeIn = createAnimation()\n        .addElement(document.querySelectorAll('.footer'))\n        .fill('none')\n        .duration(500)\n        .fromTo('opacity', '0', '0.75');\n      if (slide == this.currentSlide) {\n        await this.fadeIn.play();\n        Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>)[this.currentSlide].style.opacity = '.75';  \n      }\n    });\n\n    this.changeScore = createAnimation()\n      .addElement(document.querySelectorAll('.score-change'))\n      .fill('none')\n      .duration(2000)\n      .keyframes([\n        { offset: 0, transform: 'translateY(0%)' },\n        { offset: 0.05, transform: 'translateY(100%)' },\n        { offset: 0.1, transform: 'translateY(200%)' },\n        { offset: 0.3, transform: 'translateY(200%)' },\n        { offset: 0.5, transform: 'translateY(200%)' },\n        { offset: 0.7, transform: 'translateY(200%)' },\n        { offset: 0.9, transform: 'translateY(200%)' },\n        { offset: 0.95, transform: 'translateY(100%)' },\n        { offset: 1, transform: 'translateY(0%)' }\n      ]);\n    this.changeScore.play();\n  }\n\n  getSlideFaces(index : number) {\n    let faces = [];\n    for (let i = 0; i < this.numberOfOptions - 1; i++) { // Select five faces\n      let j = Math.floor(Math.random() * this.facePaths.length);\n      while (faces.indexOf(this.facePaths[j]) > -1 || this.facePaths[j] == this.facePaths[index]) { // Account for repeats\n        j = Math.floor(Math.random() * this.facePaths.length);\n      }\n      faces.push(this.facePaths[j]);\n    }\n    let j = Math.floor(Math.random() * this.numberOfOptions);\n    faces.splice(j, 0, this.facePaths[index]); // Add in current face\n    return faces;\n  }\n\n  shuffleFaces(faces : any[]) {\n    let randomFaceOrder = [];\n    for (let i = 0; i < faces.length; i++) {\n      randomFaceOrder.push(faces[i]);\n    }\n    for (let i = randomFaceOrder.length - 1; i > 0; i -= 1) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = randomFaceOrder[i];\n      randomFaceOrder[i] = randomFaceOrder[j];\n      randomFaceOrder[j] = temp;\n    }\n    return randomFaceOrder;\n  }\n\n  async startMemorizeTimer() {\n\n    if (this.currentSlide == 0) {\n      let fadeOutOverlay = createAnimation()\n        .addElement(document.querySelectorAll('.overlay'))\n        .fill('none')\n        .duration(300)\n        .fromTo('opacity', '.9', '0');\n      await fadeOutOverlay.play();\n    }\n\n    this.timeRemaining = this.memorizeTime;\n    this.slideInfo[this.currentSlide].stage = Stage.MEMORIZE;\n    this.timer = timer(this.timeRemaining * 1000).subscribe(() => {\n      this.startMaskTimer();\n    });\n    this.interval = interval(1000)\n      .pipe(\n        takeUntil(timer(this.timeRemaining * 1000))\n      )\n      .subscribe(async () => {\n        let first = createAnimation()\n          .addElement(document.querySelector('.time-left'))\n          .fill('none')\n          .duration(100)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)', opacity: '1' },\n            { offset: 1, transform: 'translateY(100%)', opacity: '0' }\n          ]);\n        await first.play();\n        this.timeRemaining--;\n        let second = createAnimation()\n          .addElement(document.querySelector('.time-left'))\n          .fill('none')\n          .duration(100)\n          .keyframes([\n            { offset: 0, transform: 'translateY(-100%)', opacity: '0' },\n            { offset: 1, transform: 'translateY(0%)', opacity: '1' }\n          ]);\n        await second.play();\n      });\n  }\n\n  startMaskTimer() {\n    this.slideInfo[this.currentSlide].stage = Stage.MASK;\n    this.timer = timer(2000).subscribe(() => {\n      this.slideInfo[this.currentSlide].stage = Stage.SELECT;\n    });\n  }\n\n  getSrc(index : number) {\n    if (this.slideInfo[this.currentSlide].stage == Stage.MASK) {\n      return this.mask;\n    } else if (this.slideInfo[this.currentSlide].stage == Stage.SELECT || (this.slideInfo[this.currentSlide].stage == Stage.INCORRECT && this.slideInfo[this.currentSlide].feedback)) {\n      return this.slideInfo[this.currentSlide].shuffledOrder[index];\n    } else {\n      return this.slideInfo[this.currentSlide].correctOrder[index];\n    }\n  }\n\n  async clickCard(index : number) {\n    if (this.slideInfo[this.currentSlide].stage == Stage.SELECT) {\n      if (this.slideInfo[this.currentSlide].selectedFace == null) {\n        this.slideInfo[this.currentSlide].selectedFace = this.slideInfo[this.currentSlide].shuffledOrder[index];\n      } else {\n        let index_selected : number = this.slideInfo[this.currentSlide].shuffledOrder.indexOf(this.slideInfo[this.currentSlide].selectedFace);\n        [this.slideInfo[this.currentSlide].shuffledOrder[index], this.slideInfo[this.currentSlide].shuffledOrder[index_selected]] = [this.slideInfo[this.currentSlide].shuffledOrder[index_selected], this.slideInfo[this.currentSlide].shuffledOrder[index]];\n        this.slideInfo[this.currentSlide].selectedFace = null;\n      }\n    } else if (this.showFeedback()) {\n      await this.animateCardChange();\n      this.slideInfo[this.currentSlide].feedback = !this.slideInfo[this.currentSlide].feedback;\n    }\n  }\n\n  async animateCardChange() {\n    let animations = [];\n    for (let i = 0; i < this.slideInfo[this.currentSlide].correctOrder.length; i++) {\n      let shuffledIndex = this.slideInfo[this.currentSlide].shuffledOrder.indexOf(this.slideInfo[this.currentSlide].correctOrder[i]);\n      let ampX = '0px';\n      let ampY = '0px';\n      if (i != shuffledIndex) {\n\n        if (Math.abs(i - shuffledIndex) == 1 || Math.abs(i - shuffledIndex) == 3) { // Left-Right\n          ampX = '-125px';\n          if ((i < shuffledIndex && !this.slideInfo[this.currentSlide].feedback) || (i > shuffledIndex && this.slideInfo[this.currentSlide].feedback)) { // Right\n            ampX = '125px';\n          }\n          if (((i == 1 && shuffledIndex == 2) || (i == 2 && shuffledIndex == 1))) { // Reversed for 1-2 and 2-1\n            ampX = ampX == '125px' ? '-125px' : '125px';\n          }\n        } \n        \n        if (Math.abs(i - shuffledIndex) == 3 || Math.abs(i - shuffledIndex) == 2 || (Math.abs(i - shuffledIndex) == 1 && ((i == 1 && shuffledIndex == 2) || (i == 2 && shuffledIndex == 1)))) { // Up-Down\n          ampY = '-150px';\n          if ((i < shuffledIndex && !this.slideInfo[this.currentSlide].feedback) || (i > shuffledIndex && this.slideInfo[this.currentSlide].feedback)) { // Up\n            ampY = '150px';\n          }\n        }\n      }\n\n      let card = this.slideInfo[this.currentSlide].feedback ? shuffledIndex : i;\n      let cardID = '#card-' + card;\n\n      let animation = createAnimation()\n        .addElement(document.querySelectorAll(cardID)[this.currentSlide])\n        .fill('none')\n        .duration(300)\n        .fromTo('transform', 'translate(0vw, 0vh)', 'translate(' + ampX + ', ' + ampY + ')');\n      animations.push(animation);\n    }\n\n    for (let i = 0; i < animations.length; i++) {\n      if (i == animations.length - 1) {\n        await animations[i].play();\n      } else {\n        animations[i].play();\n      }\n    }\n  }\n\n  showFeedback() {\n    return !this.scoreCardDisplayed() && (this.slideInfo[this.currentSlide].stage == Stage.CORRECT || this.slideInfo[this.currentSlide].stage == Stage.INCORRECT);\n  }\n\n  scoreCardDisplayed() {\n    return this.currentSlide >= this.numberOfSlides;\n  }\n\n  async changeSlide() {\n    if (await this.slideElement.getActiveIndex() > this.currentSlide) {\n      this.currentSlide = await this.slideElement.getActiveIndex();\n      await this.slideElement.lockSwipes(true);\n      await this.changeScore.stop();\n      await this.fadeIn.stop();\n      let footers = Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>);\n      for (let i = 0; i < footers.length; i++) {\n        footers[i].style.opacity = '0';\n      }\n\n      if (!this.scoreCardDisplayed()) {\n        this.startMemorizeTimer();\n      }\n    }\n  }\n}","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TrainingPage } from './training.page';\nimport { LearningTaskComponent } from '../learning-task/learning-task.component';\nimport { NameFaceComponent } from '../name-face/name-face.component';\nimport { WhosNewComponent } from '../whos-new/whos-new.component';\nimport { MemoryMatchComponent } from '../memory-match/memory-match.component';\nimport { ShuffleComponent } from '../shuffle/shuffle.component';\nimport { ForcedChoiceComponent } from '../forced-choice/forced-choice.component';\nimport { SameDifferentComponent } from '../same-different/same-different.component';\nimport { ScorePageComponent } from '../score-page/score-page.component';\nimport { HelpModalComponent } from '../help-modal/help-modal.component';\nimport * as Hammer from 'hammerjs';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { RaceSelectModalComponent } from '../race-select-modal/race-select-modal.component';\n\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = <any> {\n    swipe: { direction: Hammer.DIRECTION_ALL },\n  };\n}\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: TrainingPage }])\n  ],\n  declarations: [\n    TrainingPage,\n    LearningTaskComponent,\n    NameFaceComponent,\n    WhosNewComponent,\n    MemoryMatchComponent,\n    ShuffleComponent,\n    ForcedChoiceComponent,\n    SameDifferentComponent,\n    ScorePageComponent,\n    HelpModalComponent,\n    RaceSelectModalComponent\n  ],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig,\n    },\n    LocalNotifications\n  ],\n  entryComponents: [HelpModalComponent, RaceSelectModalComponent]\n})\nexport class TrainingPageModule {}\n","export default \".task-done {\\n  --background: rgb(142, 207, 142) !important;\\n  color: black;\\n}\\n\\n.task-failed {\\n  --background: rgb(201, 139, 139) !important;\\n  color: black;\\n}\\n\\n.blue-border {\\n  border-bottom-width: medium;\\n  border-bottom-style: solid;\\n  border-bottom-color: #ceb77c;\\n}\\n\\n.level {\\n  display: inline-block;\\n}\\n\\n.fade-in {\\n  display: inline-block;\\n  opacity: 0;\\n}\\n\\nion-card {\\n  --background: gainsboro;\\n  color: #ceb77c;\\n  border-radius: 6vh;\\n  margin-top: 5vh;\\n  margin-bottom: 5vh;\\n  padding-top: 1vh;\\n  padding-bottom: 1vh;\\n  font-size: 2.2vh;\\n  height: 11vh;\\n}\\n\\nion-button {\\n  text-transform: none !important;\\n  height: 8vh;\\n  font-size: 3vh;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL3BzeWNoLWNhcHN0b25lL3BzeWNoLWNhcHN0b25lL2Zyb250LWVuZC9zcmMvYXBwL3RyYWluaW5nL3RyYWluaW5nLnBhZ2Uuc2NzcyIsInNyYy9hcHAvdHJhaW5pbmcvdHJhaW5pbmcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkNBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSwyQ0FBQTtFQUNBLFlBQUE7QUNDRjs7QURFQTtFQUNFLDJCQUFBO0VBQ0EsMEJBQUE7RUFDQSw0QkFBQTtBQ0NGOztBREVBO0VBQ0UscUJBQUE7QUNDRjs7QURFQTtFQUNFLHFCQUFBO0VBQ0EsVUFBQTtBQ0NGOztBREVBO0VBQ0UsdUJBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSwrQkFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC90cmFpbmluZy90cmFpbmluZy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFzay1kb25lIHtcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoMTQyLCAyMDcsIDE0MikgIWltcG9ydGFudDtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4udGFzay1mYWlsZWQge1xuICAtLWJhY2tncm91bmQ6IHJnYigyMDEsIDEzOSwgMTM5KSAhaW1wb3J0YW50O1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5ibHVlLWJvcmRlciB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IG1lZGl1bTtcbiAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYigyMDYsMTgzLDEyNCk7XG59XG5cbi5sZXZlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmZhZGUtaW4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG9wYWNpdHk6IDA7IFxufVxuXG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogZ2FpbnNib3JvO1xuICBjb2xvcjogcmdiKDIwNiwxODMsMTI0KTtcbiAgYm9yZGVyLXJhZGl1czogNnZoO1xuICBtYXJnaW4tdG9wOiA1dmg7XG4gIG1hcmdpbi1ib3R0b206IDV2aDtcbiAgcGFkZGluZy10b3A6IDF2aDtcbiAgcGFkZGluZy1ib3R0b206IDF2aDtcbiAgZm9udC1zaXplOiAyLjJ2aDtcbiAgaGVpZ2h0OiAxMXZoO1xufVxuXG5pb24tYnV0dG9uIHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiA4dmg7XG4gIGZvbnQtc2l6ZTogM3ZoO1xufSIsIi50YXNrLWRvbmUge1xuICAtLWJhY2tncm91bmQ6IHJnYigxNDIsIDIwNywgMTQyKSAhaW1wb3J0YW50O1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi50YXNrLWZhaWxlZCB7XG4gIC0tYmFja2dyb3VuZDogcmdiKDIwMSwgMTM5LCAxMzkpICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLmJsdWUtYm9yZGVyIHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogbWVkaXVtO1xuICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2NlYjc3Yztcbn1cblxuLmxldmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uZmFkZS1pbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3BhY2l0eTogMDtcbn1cblxuaW9uLWNhcmQge1xuICAtLWJhY2tncm91bmQ6IGdhaW5zYm9ybztcbiAgY29sb3I6ICNjZWI3N2M7XG4gIGJvcmRlci1yYWRpdXM6IDZ2aDtcbiAgbWFyZ2luLXRvcDogNXZoO1xuICBtYXJnaW4tYm90dG9tOiA1dmg7XG4gIHBhZGRpbmctdG9wOiAxdmg7XG4gIHBhZGRpbmctYm90dG9tOiAxdmg7XG4gIGZvbnQtc2l6ZTogMi4ydmg7XG4gIGhlaWdodDogMTF2aDtcbn1cblxuaW9uLWJ1dHRvbiB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogOHZoO1xuICBmb250LXNpemU6IDN2aDtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { timer, interval } from 'rxjs';\nimport { AlertController, ModalController, IonRouterOutlet, ToastController } from '@ionic/angular';\nimport { HelpModalComponent } from '../help-modal/help-modal.component';\nimport { takeUntil, map } from 'rxjs/operators';\nimport { createAnimation } from '@ionic/core';\nimport { GetProgressService } from '../service/get-progress.service';\nimport { SubmitScoresService } from '../service/submit-scores.service';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { RaceSelectModalComponent } from '../race-select-modal/race-select-modal.component';\nimport { ModalsPluginWeb } from '@capacitor/core';\nimport { environment } from '../../environments/environment';\n\nenum Race { BLACK, ASIAN, LATINO, WHITE }\nenum Stage { START, TRAINING, ASSESSMENT, DONE }\nenum Task { NAME_FACE, WHOS_NEW, MEMORY, SHUFFLE, FORCED_CHOICE, SAME_DIFFERENT, PRETEST, POSTTEST, LEARNING }\n\n// let raceProperties = {\n//   0: {\n//     race: Race.BLACK,\n//     //Change to initials.\n//     namePool: {\n//       1: ['J.S', 'O.N', 'R.T', 'M.A', 'W.L', 'D.D', 'R.C', 'J.I'],\n//       2: ['T.S', 'C.H', 'C.S', 'D.A', 'M.W', 'A.Y', 'D.J', 'M.K'],\n//       3: ['P.L', 'S.T', 'A.D', 'K.D', 'J.K', 'G.W', 'K.E', 'B.C'],\n//       4: ['E.D', 'R.N', 'T.M', 'J.H', 'K.H', 'R.B', 'J.Y', 'G.C'],\n//       5: ['N.C', 'E.B', 'S.V', 'J.F', 'L.T', 'J.B', 'S.B', 'B.H'],\n//       6: ['F.Y', 'B.S', 'G.P', 'S.R', 'R.H', 'P.J', 'A.W', 'J.C'],\n//       7: ['D.Q', 'J.N', 'T.W', 'A.G', 'J.M', 'H.K', 'D.L', 'A.P'],\n//       8: ['P.P', 'N.S', 'Z.S', 'W.W', 'K.F', 'H.I', 'C.B', 'J.L']\n//     }\n//   },\n//   1: {\n//     race: Race.ASIAN,\n//     //Change to initials.\n//     namePool: {\n//       1: ['J.S', 'O.N', 'R.T', 'M.A', 'W.L', 'D.D', 'R.C', 'J.I'],\n//       2: ['T.S', 'C.H', 'C.S', 'D.A', 'M.W', 'A.Y', 'D.J', 'M.K'],\n//       3: ['P.L', 'S.T', 'A.D', 'K.D', 'J.K', 'G.W', 'K.E', 'B.C'],\n//       4: ['E.D', 'R.N', 'T.M', 'J.H', 'K.H', 'R.B', 'J.Y', 'G.C'],\n//       5: ['N.C', 'E.B', 'S.V', 'J.F', 'L.T', 'J.B', 'S.B', 'B.H'],\n//       6: ['F.Y', 'B.S', 'G.P', 'S.R', 'R.H', 'P.J', 'A.W', 'J.C'],\n//       7: ['D.Q', 'J.N', 'T.W', 'A.G', 'J.M', 'H.K', 'D.L', 'A.P'],\n//       8: ['P.P', 'N.S', 'Z.S', 'W.W', 'K.F', 'H.I', 'C.B', 'J.L']\n//     }\n//   },\n//   2: {\n//     race: Race.LATINO,\n//     //Change to initials.\n//     namePool: {\n//       1: ['J.S', 'O.N', 'R.T', 'M.A', 'W.L', 'D.D', 'R.C', 'J.I'],\n//       2: ['T.S', 'C.H', 'C.S', 'D.A', 'M.W', 'A.Y', 'D.J', 'M.K'],\n//       3: ['P.L', 'S.T', 'A.D', 'K.D', 'J.K', 'G.W', 'K.E', 'B.C'],\n//       4: ['E.D', 'R.N', 'T.M', 'J.H', 'K.H', 'R.B', 'J.Y', 'G.C'],\n//       5: ['N.C', 'E.B', 'S.V', 'J.F', 'L.T', 'J.B', 'S.B', 'B.H'],\n//       6: ['F.Y', 'B.S', 'G.P', 'S.R', 'R.H', 'P.J', 'A.W', 'J.C'],\n//       7: ['D.Q', 'J.N', 'T.W', 'A.G', 'J.M', 'H.K', 'D.L', 'A.P'],\n//       8: ['P.P', 'N.S', 'Z.S', 'W.W', 'K.F', 'H.I', 'C.B', 'J.L']\n//     }\n//   },\n//   3: {\n//     race: Race.WHITE,\n//     //Change to initials.\n//     namePool: {\n//       1: ['J.S', 'O.N', 'R.T', 'M.A', 'W.L', 'D.D', 'R.C', 'J.I'],\n//       2: ['T.S', 'C.H', 'C.S', 'D.A', 'M.W', 'A.Y', 'D.J', 'M.K'],\n//       3: ['P.L', 'S.T', 'A.D', 'K.D', 'J.K', 'G.W', 'K.E', 'B.C'],\n//       4: ['E.D', 'R.N', 'T.M', 'J.H', 'K.H', 'R.B', 'J.Y', 'G.C'],\n//       5: ['N.C', 'E.B', 'S.V', 'J.F', 'L.T', 'J.B', 'S.B', 'B.H'],\n//       6: ['F.Y', 'B.S', 'G.P', 'S.R', 'R.H', 'P.J', 'A.W', 'J.C'],\n//       7: ['D.Q', 'J.N', 'T.W', 'A.G', 'J.M', 'H.K', 'D.L', 'A.P'],\n//       8: ['P.P', 'N.S', 'Z.S', 'W.W', 'K.F', 'H.I', 'C.B', 'J.L']\n//     }\n//   }\n// }\nlet namePool = {\n  1: ['J.S', 'O.N', 'R.T', 'M.A', 'W.L', 'D.D', 'R.C', 'J.I'],\n  2: ['T.S', 'C.H', 'C.S', 'D.A', 'M.W', 'A.Y', 'D.J', 'M.K'],\n  3: ['P.L', 'S.T', 'A.D', 'K.D', 'J.K', 'G.W', 'K.E', 'B.C'],\n  4: ['E.D', 'R.N', 'T.M', 'J.H', 'K.H', 'R.B', 'J.Y', 'G.C'],\n  5: ['N.C', 'E.B', 'S.V', 'J.F', 'L.T', 'J.B', 'S.B', 'B.H'],\n  6: ['F.Y', 'B.S', 'G.P', 'S.R', 'R.H', 'P.J', 'A.W', 'J.C'],\n  7: ['D.Q', 'J.N', 'T.W', 'A.G', 'J.M', 'H.K', 'D.L', 'A.P'],\n  8: ['P.P', 'N.S', 'Z.S', 'W.W', 'K.F', 'H.I', 'C.B', 'J.L']\n}\n\n\n@Component({\n  selector: 'app-training',\n  templateUrl: 'training.page.html',\n  styleUrls: ['training.page.scss']\n})\nexport class TrainingPage {\n\n  constructor(public alertController: AlertController, public modalController: ModalController, private routerOutlet: IonRouterOutlet, public getProgress: GetProgressService, public submitScores: SubmitScoresService, public toastController : ToastController, public localNotifications : LocalNotifications, public http : HttpClient) {\n\n    this.routerOutlet.swipeGesture = false;\n\n  }\n\n  ionViewWillEnter() {\n    this.stage = null;\n    this.task = null;\n    timer(500).subscribe(() => {\n      // replace with user choice\n      this.currentRace = Race.BLACK;\n      this.initCurrentLevel();\n    });\n  }\n\n  ionViewWillLeave() {\n    Array.from(document.getElementsByClassName('fade-in') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '0';\n  }\n\n  ngAfterViewInit() {\n    if (this.userLevel == 0) {\n      timer(500).subscribe(() => {\n        this.getHelp(true);\n      });\n    }\n  }\n\n  Race = Race;\n  Stage = Stage;\n  Task = Task;\n  stage : Stage = null;\n  task : Task = null;\n  learningDone : boolean = false;\n  scores : number[] = [-1, -1, -1, -1, -1, -1];\n\n  minTrainScore : number = 0.75;\n  taskLengths : number[] = [8, 8, 32, 16, 8, 8];\n  numFaces : number = 8;\n  assessmentPoolSize : number = 30;\n  assessment_icon : string = \"assets/icon/assessment.svg\";\n  replay_icon : string = \"assets/icon/replay.svg\";\n  face_icon : string = \"assets/icon/face.svg\";\n\n  setNames : string[];\n  trainingFacePaths : string[];\n  whosNewFacePaths : string[];\n  assessmentFacePaths : string[];\n  progress : number;\n  currentRace : any;\n  userLevel : any;\n  /**\n   * trial starts\n   * userRace : any;\n   * trial ends\n  */\n  \n  initCurrentLevel(race : Race = Race.BLACK) {\n    // console.log(\"raceName just before sumbit score:\");\n    // console.log(raceName);\n    //this.showRaceSelect();\n    /**\n    * Option = User's choice\n    * Option -> Database\n    * let days = res['days'];\n    * race = days[day]['race'];this.currentRace = race;\n    */\n    // this.currentRace = race;\n\n    this.getProgress.getData().subscribe((res) => {\n      // console.log(res);\n      let days = res['days'];\n      this.userLevel = res['level'];\n      // this.currentRace = res['race'];\n      /**\n       * trial starts\n       * this.userRace = res['race'];\n       * this.userRace = \n       * trial ends\n      */ \n\n      let levelCompletedToday = false;\n\n      if (this.userLevel == 0 || this.userLevel == 9) {\n\n        this.getPrePostAssessmentFaces().then((faces) => {\n          this.assessmentFacePaths = faces;\n          timer(1000).subscribe(() => {\n            this.stage = Stage.START;\n          });\n        });\n\n      } else if (this.userLevel > 0 && this.userLevel < 9) {\n\n        let today = new Date().toLocaleDateString();\n        let lastDay = '';\n        for (let day in days) {\n          if ([days[day]['nameface'], days[day]['whosnew'], days[day]['memory'], days[day]['shuffle'], days[day]['forcedchoice'], days[day]['samedifferent']].indexOf(-1) < 0) {\n            lastDay = new Date(days[day]['date']).toLocaleDateString();\n          }\n        }\n        if (today == lastDay) {\n          levelCompletedToday = true;\n        }\n\n        if (!levelCompletedToday) {\n          this.setNames = namePool[this.userLevel]; //raceProperties[this.currentRace].namePool[this.userLevel];\n          this.getTrainingFaces().then((faces) => {\n            this.trainingFacePaths = faces;\n            this.getWhosNewFaces().then((faces) => {\n              this.whosNewFacePaths = faces;\n              this.getDailyAssessmentFaces().then((faces) => {\n                this.assessmentFacePaths = faces;\n                if (days[this.userLevel - 1]) {\n                  this.scores = [days[this.userLevel - 1]['nameface'], days[this.userLevel - 1]['whosnew'], days[this.userLevel - 1]['memory'], days[this.userLevel - 1]['shuffle'], days[this.userLevel - 1]['forcedchoice'], days[this.userLevel - 1]['samedifferent']];\n                  this.learningDone = this.scores.indexOf(-1) > -1;\n                }\n                timer(1000).subscribe(() => {\n                  this.iterateStage();\n                })\n              });\n            });\n          });\n\n        } else {\n          this.userLevel--;\n          this.finishLevel();\n        }\n\n      } else {\n        this.stage = Stage.DONE;\n      }\n\n      let images : any[] = [];\n      images.push(new Image());\n      images[images.length - 1].src = 'assets/background_imgs/mask1.png';\n\n    }, async (err) => { \n      const toast = await this.toastController.create({\n        message: 'Something went wrong. Please try logging out and back in',\n        color: 'danger',\n        duration: 2000\n      });\n      toast.present();\n    });\n\n  }\n\n  iterateStage() {\n    this.task = null;\n    if (!this.learningDone) {\n      this.stage = Stage.START;\n    } else if (this.trainingNotDone()) {\n      this.stage = Stage.TRAINING;\n      if (this.scores[Task.NAME_FACE] == -1 && this.scores[Task.WHOS_NEW] == -1 && this.scores[Task.MEMORY] == -1 && this.scores[Task.SAME_DIFFERENT] == -1) {\n        this.renderLevelOneHelp();\n      }\n    } else if (this.scores.includes(-1)) {\n      this.stage = Stage.ASSESSMENT;\n      if (this.scores[Task.FORCED_CHOICE] == -1 && this.scores[Task.SAME_DIFFERENT] == -1) {\n        this.renderLevelOneHelp();\n      }\n    } else {\n      this.finishLevel();\n      this.scheduleNotification();\n    }\n  }\n\n  getTitle() {\n    switch (this.task) {\n      case null:\n        switch (this.stage) {\n          case Stage.START:\n            return 'Start';\n          case Stage.TRAINING:\n            return 'Training Tasks';\n          case Stage.ASSESSMENT:\n            return 'Assessment Tasks';\n          case Stage.DONE:\n            return 'Finish';\n          default:\n            return \"Modules\";\n        }\n      case Task.LEARNING:\n        return 'Meet Today\\'s Faces';\n      case Task.NAME_FACE:\n        return 'Name and Face';\n      case Task.WHOS_NEW:\n        return 'Who\\'s New?';\n      case Task.MEMORY:\n        return 'Memory Match';\n      case Task.SHUFFLE:\n        return 'Shuffle';\n      case Task.FORCED_CHOICE:\n        return 'Forced Choice';\n      case Task.SAME_DIFFERENT:\n        return 'Same-Different';\n      case Task.PRETEST:\n        return 'Pre-Assessment';\n      case Task.POSTTEST:\n        return 'Post-Assessment';\n      default:\n        return \"Modules\"\n    }\n  }\n\n  async getHelp(displayFirst : boolean) {\n    const modal = await this.modalController.create({\n      component: HelpModalComponent,\n      componentProps: {\n        \"paramTask\": this.getTitle(),\n        \"displayFirst\": displayFirst\n      }\n    });\n    await modal.present();\n  }\n  \n  async showRaceSelect() {\n    let raceName = null;\n    const modal = await this.modalController.create({\n      component: RaceSelectModalComponent,\n      componentProps: {\n        race: this.currentRace\n      } //componentProps: { users: this.users },\n    });\n    await modal.present();\n    await modal.onWillDismiss().then(data=>{\n      console.log('data came back from modal');\n      console.log(data);\n      raceName = data['data'].toLowerCase();\n      console.log(\"raceName is:\");\n      console.log(raceName);\n      //this.submitScores.submitTaskScores(-1, [-1, -1, -1, -1, -1, -1], raceName); // what if user chooses to change race groups throughout the process\n    });\n    // console.log(\"Outside, and raceName now is:\");\n    // console.log(raceName);\n    this.submitScores.submitTaskScores(-1, [-1, -1, -1, -1, -1, -1], raceName);\n    return raceName;\n  }\n \n  renderLevelOneHelp() {\n    if (this.userLevel == 1) {\n      timer(500).subscribe(() => {\n        this.getHelp(true);\n      });\n    }\n  }\n\n  async getTrainingFaces() {\n    let name = await this.showRaceSelect();\n    this.currentRace = name;\n    console.log(\"name is:\");\n    console.log(name);\n    // this.trainingFacePaths = name;\n    console.log(\"passed.\");\n    let facePaths : string[] = [];\n    let imagesAlreadyStored = true;\n\n    for (let i = 0; i < 8; i++) {\n      let image = sessionStorage.getItem(`training${i}`);\n      if (!image) {\n        imagesAlreadyStored = false;\n        break;\n      } else {\n        facePaths.push(image);\n      }\n    }\n    // if (!imagesAlreadyStored) {\n    if(true){\n      facePaths = [];\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      //await this.http.put(environment.backendBaseUrl + \"getTrainingFaces/\", {level: this.userLevel, race: this.currentRace}, httpOptions).subscribe((res) => {\n      await this.http.put(environment.backendBaseUrl + \"getTrainingFaces/\", {level: this.userLevel, race: name}, httpOptions).subscribe((res) => {\n        for (let i = 0; i < 8; i++) {\n          //clear stack\n          facePaths.push(`data:image/png;base64,${res['images'][i]}`)\n          sessionStorage.setItem(`training${i}`, `data:image/png;base64,${res['images'][i]}`)\n        }\n        console.log(\"photos updated.\");\n      });\n    }\n    return facePaths;\n  }\n\n  async getWhosNewFaces() {\n    let facePaths : string[] = [];\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      })\n    };\n    await this.http.put(environment.backendBaseUrl + \"getWhosNewFaces/\", {level: this.userLevel, race: this.currentRace}, httpOptions).subscribe((res) => {\n      for (let i = 0; i < 8; i++) {\n        facePaths.push(`data:image/png;base64,${res['images'][i]}`)\n      }\n    });\n\n    return facePaths;\n  }\n  \n  async getDailyAssessmentFaces() {\n    let facePaths : string[] = [];\n    let imagesAlreadyStored = true;\n\n    for (let i = 0; i < 8; i++) {\n      let image = sessionStorage.getItem(`dailyAssessment${i}`);\n      if (!image) {\n        imagesAlreadyStored = false;\n        break;\n      } else {\n        facePaths.push(image);\n      }\n    }\n    if (!imagesAlreadyStored) {\n      facePaths = [];\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      await this.http.put(environment.backendBaseUrl + \"getDailyAssessmentFaces/\", {race: this.currentRace}, httpOptions).subscribe((res) => {\n        for (let i = 0; i < 8; i++) {\n          facePaths.push(`data:image/jpg;base64,${res['images'][i]}`)\n          sessionStorage.setItem(`dailyAssessment${i}`, `data:image/jpg;base64,${res['images'][i]}`)\n        }\n      });\n    }\n    return facePaths;\n  }\n\n  async getPrePostAssessmentFaces() { // Too many to store in local/session storage\n    let facePaths : string[] = [];\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      })\n    };\n    await this.http.put(environment.backendBaseUrl + \"getPrePostAssessmentFaces/\", {race: this.currentRace}, httpOptions).subscribe((res) => {\n      for (let i = 0; i < 30; i++) {\n        facePaths.push(`data:image/jpg;base64,${res['images'][i]}`)\n      }\n    });\n\n    return facePaths;\n  }\n\n  finished(score : number[], task : number) {\n    console.log(\"this is finished.\")\n    this.scores[task] = Math.max(score[0], this.scores[task]);\n    if (score[1] != 0) { // Not retrying\n      if (score[1] == 1) { // Learning\n        this.task = Task.LEARNING;\n      } else { // Done\n        this.task = null;\n      }\n      if (task == 4 || task == 5) { // Assessments automatically move on\n        this.iterateStage();\n      }\n    }\n    this.submitScores.submitTaskScores(this.userLevel, this.scores, \"black\");\n  }\n\n  // finished_setRaceName() {\n  //   this.showRaceSelect();\n  // }\n\n  finishPrePost(score : number[]) {\n    if (this.userLevel == 0) {\n      this.submitScores.submitPreAssessment(score[0], \"black\");\n    } else if (this.userLevel == 9) {\n      this.submitScores.submitPostAssessment(score[0], \"black\");\n    }\n    this.finishLevel();\n  }\n\n  async taskExitAlert() {\n    const alert = await this.alertController.create({\n      header: 'Quit',\n      message: 'Do you want to quit? Your progress on this task will be lost.',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Quit',\n          handler: () => {\n            timer(500).subscribe(() => {\n              this.task = null;\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async startAssessmentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Assessment',\n      message: 'Do you want to move on to the assessment? You will not be able to come back to training today.',\n      buttons: [\n        {\n          text: 'Cancel'\n        },\n        {\n          text: 'Go',\n          handler: () => {\n            timer(500).subscribe(() => {\n              this.iterateStage();\n            })\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  clickStart() {\n    /**\n    if (this.userLevel == 0) {\n      this.task = Task.PRETEST;\n      timer(500).subscribe(() => {\n        this.getHelp(true);\n      });\n    } else if (this.userLevel == 9) {\n      this.task = Task.POSTTEST;\n    } else if (this.userLevel > 0 && this.userLevel < 9) {\n      this.task = Task.LEARNING;\n      this.renderLevelOneHelp();\n    }\n    **/\n    if (this.userLevel == 9) {\n      this.task = Task.POSTTEST;\n    } else if (this.userLevel >= 0 && this.userLevel < 9) {\n      this.task = Task.LEARNING;\n      this.renderLevelOneHelp();\n    }\n  }\n\n  finishLevel() {\n\n    this.stage = Stage.DONE;\n\n    let currentTask : Task = this.task;\n    this.task = null;\n\n    if (currentTask != Task.POSTTEST) {\n      this.progress = 0;\n      timer(1200).subscribe(async () => {\n        this.userLevel++;\n\n        let inflate = createAnimation()\n        .addElement(document.querySelector('.level'))\n        .fill('none')\n        .duration(500)\n        .keyframes([\n          { offset: 0, transform: 'scale(1, 1)' },\n          { offset: 0.5, transform: 'scale(2, 2)' },\n          { offset: 1, transform: 'scale(1, 1)' }\n        ]);\n        await inflate.play();\n\n        timer(500).subscribe(async () => {\n          let fadeIn = createAnimation()\n          .addElement(document.querySelector('.fade-in'))\n          .fill('none')\n          .duration(500)\n          .fromTo('opacity', '0', '1');\n          await fadeIn.play();\n          Array.from(document.getElementsByClassName('fade-in') as HTMLCollectionOf<HTMLElement>)[0].style.opacity = '1';\n        });\n\n      });\n\n      interval(100)\n      .pipe(\n        takeUntil(timer(1100))\n      )\n      .subscribe(() => {\n        this.progress += .1;\n      });\n\n    } else {\n      this.userLevel++;\n    }\n  }\n\n  trainingNotDone() {\n    return this.scores[Task.NAME_FACE] < this.taskLengths[Task.NAME_FACE] * this.minTrainScore ||\n      this.scores[Task.WHOS_NEW] < this.taskLengths[Task.WHOS_NEW] * this.minTrainScore  ||\n      this.scores[Task.MEMORY] < this.taskLengths[Task.MEMORY] * this.minTrainScore  ||\n      this.scores[Task.SHUFFLE] < this.taskLengths[Task.SHUFFLE] * this.minTrainScore\n  }\n\n  scheduleNotification() {\n    let date = new Date();\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setHours(8);\n    date.setDate(date.getDate() + 1);\n    this.localNotifications.schedule({\n      id: 1,\n      text: 'You\\'re next training is now available!',\n      foreground: true,\n      trigger: {at: date}\n    });\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dob3MtbmV3L3dob3MtbmV3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, EventEmitter, Output, Input, ViewChild } from '@angular/core';\nimport { IonSlides } from '@ionic/angular';\nimport { timer } from 'rxjs';\nimport { createAnimation } from '@ionic/core';\n\nenum Stage { SELECT, CORRECT, INCORRECT }\n\n@Component({\n  selector: 'app-whos-new',\n  templateUrl: './whos-new.component.html',\n  styleUrls: ['./whos-new.component.scss'],\n})\nexport class WhosNewComponent implements OnInit {\n  @Input() facePaths : string[];\n  @Input() newFacePaths : string[];\n  @Output() finished = new EventEmitter<[number, number]>();\n  @ViewChild('slideElement', {static: false}) slideElement: IonSlides;\n\n  constructor() {}\n  \n  ngOnInit() {\n\n    this.score = 0;\n    this.currentSlide = 0;\n    this.progressPercent = 0;\n    this.fadeIn = createAnimation();\n    this.changeScore = createAnimation();\n    this.taskLength = this.newFacePaths.length;\n\n    // Initialize shuffled face list\n    this.shuffledFaces = [];\n    for (let face = 0; face < this.taskLength; face++) {\n      this.shuffledFaces.push(this.newFacePaths[face]);\n    }\n    // Shuffle Faces\n    for (let i = this.taskLength - 1; i > 0; i -= 1) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = this.shuffledFaces[i];\n      this.shuffledFaces[i] = this.shuffledFaces[j];\n      this.shuffledFaces[j] = temp;\n    }\n\n    this.slideInfo = [];\n    for (let i = 0; i < this.taskLength; i++) {\n      this.slideInfo.push({\n        correctFace: this.shuffledFaces[i],\n        selectedFace: null,\n        faces: this.getSlideFaces(i),\n        stage: Stage.SELECT\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.slideElement.lockSwipes(true);\n  }\n\n  finish(event : any) {\n    this.finished.emit([this.score, event])\n    if (event == 0) { // Reload and retry\n      this.ngOnInit();\n      this.slideElement.lockSwipes(false);\n      this.slideElement.slideTo(0);\n      this.slideElement.lockSwipes(true);\n    }\n  }\n\n  Stage = Stage;\n  numberOfOptions : number = 4;\n\n  score : number;\n  currentSlide : number;\n  progressPercent : number;\n  taskLength : number;\n  shuffledFaces : any;\n  slideInfo : any;\n  fadeIn : any;\n  changeScore : any;\n  \n  selectFace(face : string) {\n    if (this.slideInfo[this.currentSlide].stage == Stage.SELECT) {\n      this.slideInfo[this.currentSlide].selectedFace = face;\n      if (face == this.slideInfo[this.currentSlide].correctFace) {\n        this.score++;\n        this.slideInfo[this.currentSlide].stage = Stage.CORRECT;\n        this.changeScore = createAnimation()\n          .addElement(document.querySelectorAll('.score-change'))\n          .fill('none')\n          .duration(2000)\n          .keyframes([\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 0.05, transform: 'translateY(100%)' },\n            { offset: 0.1, transform: 'translateY(200%)' },\n            { offset: 0.3, transform: 'translateY(200%)' },\n            { offset: 0.5, transform: 'translateY(200%)' },\n            { offset: 0.7, transform: 'translateY(200%)' },\n            { offset: 0.9, transform: 'translateY(200%)' },\n            { offset: 0.95, transform: 'translateY(100%)' },\n            { offset: 1, transform: 'translateY(0%)' }\n          ]);\n        this.changeScore.play();\n      } else {\n        this.slideInfo[this.currentSlide].stage = Stage.INCORRECT;\n      }\n      this.progressPercent = (this.currentSlide + 1)/this.taskLength;\n\n      this.slideElement.lockSwipes(false);\n      this.slideElement.lockSwipeToPrev(true);\n\n      let slide = this.currentSlide;\n      timer(1000).subscribe(async () => {\n        if (slide == this.currentSlide) {\n          this.fadeIn = createAnimation()\n            .addElement(document.querySelectorAll('.footer'))\n            .fill('none')\n            .duration(500)\n            .fromTo('opacity', '0', '0.75');\n          await this.fadeIn.play();\n          Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>)[this.currentSlide].style.opacity = '.75';  \n        }\n      });\n    }\n  }\n\n  getSlideFaces(index : number) {\n    let faces = [];\n    for (let i = 0; i < this.numberOfOptions - 1; i++) { // Select three faces from today's set\n      let j = Math.floor(Math.random() * this.taskLength);\n      while (faces.indexOf(this.facePaths[j]) > -1) { // Account for repeats\n        j = Math.floor(Math.random() * this.taskLength);\n      }\n      faces.push(this.facePaths[j]);\n    }\n    let j = Math.floor(Math.random() * this.numberOfOptions);\n    faces.splice(j, 0, this.shuffledFaces[index]); // Add in current face\n    return faces;\n  }\n  \n  showDisabled(face : number) {\n    return this.showFeedback() && this.slideInfo[this.currentSlide].correctFace != this.slideInfo[this.currentSlide].faces[face];\n  }\n\n  showSelected(face : number) {\n    return this.showFeedback() &&\n      this.slideInfo[this.currentSlide].faces[face] != this.slideInfo[this.currentSlide].correctFace &&\n      this.slideInfo[this.currentSlide].faces[face] == this.slideInfo[this.currentSlide].selectedFace;\n  }\n\n  showFeedback() {\n    return !this.scoreCardDisplayed() && (this.slideInfo[this.currentSlide].stage == Stage.CORRECT || this.slideInfo[this.currentSlide].stage == Stage.INCORRECT);\n  }\n\n  scoreCardDisplayed() {\n    return this.currentSlide >= this.taskLength;\n  }\n\n  async changeSlide() {\n    if (await this.slideElement.getActiveIndex() > this.currentSlide) {\n      this.currentSlide = await this.slideElement.getActiveIndex();\n      await this.slideElement.lockSwipes(true);\n      await this.changeScore.stop();\n      await this.fadeIn.stop();\n      let footers = Array.from(document.getElementsByClassName('footer') as HTMLCollectionOf<HTMLElement>);\n      for (let i = 0; i < footers.length; i++) {\n        footers[i].style.opacity = '0';\n      }\n    }\n  }\n}\n"],"sourceRoot":"webpack:///","file":"training-training-module-es5.js"}